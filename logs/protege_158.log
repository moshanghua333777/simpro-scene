2017.11.13 17:25:24.824 MSK INFO: *** SYSTEM START *** -- SystemUtilities.logSystemInfo()
2017.11.13 17:25:24.828 MSK CONFIG: Protege 3.5 Build 663, JVM 1.8.0_31-b13, memory=1908M, Mac OS X, encoding=UTF-8, language=en, country=US -- SystemUtilities.logSystemInfo()
2017.11.13 17:25:27.072 MSK CONFIG: Loaded plugin clojuretab -- PluginUtilities.logClassLoaderInformation()
2017.11.13 17:25:27.229 MSK CONFIG: Loaded plugin edu.stanford.smi.protegex.standard_extensions - Graph Widget, Table Widget -- PluginUtilities.logClassLoaderInformation()
2017.11.13 17:25:27.362 MSK CONFIG: Loaded plugin ru.igis.omtab -- PluginUtilities.logClassLoaderInformation()
2017.11.13 17:25:32.469 MSK WARNING: missing bundle: protege_text -- BundleHelper.<init>()
2017.11.13 17:25:39.745 MSK INFO: Loaded 5000 instances: ScenarioN_ProjectKB_Class82863 -- Parser.getInstance()
2017.11.13 17:25:39.750 MSK INFO: Loaded 6000 instances: ScenarioN_ProjectKB_Class83863 -- Parser.getInstance()
2017.11.13 17:25:39.777 MSK INFO: Set type on 5000 instances: ScenarioN_ProjectKB_Class83424 -- Parser.getInstance()
2017.11.13 17:25:43.321 MSK INFO: Load time for file:/Users/ru/clojure/simpro-scene/pprj_examples/Sea.pprj = 2 sec (project) + 1 sec (ui) -- ProjectManager$3.run()
2017.11.13 18:59:14.906 MSK WARNING: Exception processing updates to instance list -- java.lang.reflect.InvocationTargetException
	at java.awt.EventQueue.invokeAndWait(EventQueue.java:1312)
	at java.awt.EventQueue.invokeAndWait(EventQueue.java:1287)
	at javax.swing.SwingUtilities.invokeAndWait(SwingUtilities.java:1348)
	at edu.stanford.smi.protege.ui.DirectInstancesList$AddInstancesRunner.handleChanges(Unknown Source)
	at edu.stanford.smi.protege.ui.DirectInstancesList$AddInstancesRunner.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: null class
	at edu.stanford.smi.protege.model.framestore.ArgumentCheckingFrameStore.assertNotNull(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.ArgumentCheckingFrameStore.checkCls(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.ArgumentCheckingFrameStore.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.ModificationFrameStore.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.FrameStoreAdapter.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.FrameStoreAdapter.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.framestore.FrameStoreAdapter.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultKnowledgeBase.getTemplateFacetValues(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultKnowledgeBase.getTemplateFacetValue(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultKnowledgeBase.getTemplateSlotMaximumCardinality2(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultKnowledgeBase.getTemplateSlotAllowsMultipleValues(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultKnowledgeBase.getOwnSlotAllowsMultipleValues(Unknown Source)
	at edu.stanford.smi.protege.model.DefaultFrame.getOwnSlotAllowsMultipleValues(Unknown Source)
	at edu.stanford.smi.protege.widget.AbstractSlotWidget.setWidgetValues(Unknown Source)
	at edu.stanford.smi.protege.widget.AbstractSlotWidget.loadValues(Unknown Source)
	at edu.stanford.smi.protege.widget.AbstractSlotWidget.setInstance(Unknown Source)
	at edu.stanford.smi.protege.widget.TextComponentWidget.setInstance(Unknown Source)
	at edu.stanford.smi.protege.widget.FormWidget.propagateSetInstanceToWidgets(Unknown Source)
	at edu.stanford.smi.protege.widget.FormWidget.setInstance(Unknown Source)
	at edu.stanford.smi.protege.ui.InstanceDisplay.setInstance(Unknown Source)
	at edu.stanford.smi.protege.ui.InstanceDisplay.setInstance(Unknown Source)
	at edu.stanford.smi.protege.widget.InstancesTab$2.selectionChanged(Unknown Source)
	at edu.stanford.smi.protege.util.SelectionEventDispatcher.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.ListenerCollection.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.ListenerCollection.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.SelectableContainer.notifySelectionListeners(Unknown Source)
	at edu.stanford.smi.protege.util.SelectableContainer$1.selectionChanged(Unknown Source)
	at edu.stanford.smi.protege.util.SelectionEventDispatcher.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.ListenerCollection.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.ListenerCollection.postEvent(Unknown Source)
	at edu.stanford.smi.protege.util.SelectableList.notifySelectionListeners(Unknown Source)
	at edu.stanford.smi.protege.util.SelectableList$1.valueChanged(Unknown Source)
	at javax.swing.JList.fireSelectionValueChanged(JList.java:1796)
	at javax.swing.JList$ListSelectionHandler.valueChanged(JList.java:1810)
	at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:184)
	at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:164)
	at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:211)
	at javax.swing.DefaultListSelectionModel.removeIndexInterval(DefaultListSelectionModel.java:677)
	at javax.swing.plaf.basic.BasicListUI$Handler.intervalRemoved(BasicListUI.java:2601)
	at javax.swing.AbstractListModel.fireIntervalRemoved(AbstractListModel.java:179)
	at edu.stanford.smi.protege.util.SimpleListModel.removeValue(Unknown Source)
	at edu.stanford.smi.protege.ui.DirectInstancesList$AddInstancesRunner$3.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:301)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:702)
	at java.awt.EventQueue$3.run(EventQueue.java:696)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)

