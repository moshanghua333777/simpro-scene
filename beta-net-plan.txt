(0 e 0 ((CZMLGenerator :? :? :? :? :? :? :?) nil nil) "bs:Boat on Map")
(1 i 1 ((Boat :?crs :? :?lab :? :? :? :?) nil nil))
(2 i 2 ((Clock :? :?t) nil nil))
(3 x 3 (not (CZMLSpan :? :?lab :? :? :?) nil nil) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval30333$fn__30334 0x77e9717d "clojure.core$eval30333$fn__30334@77e9717d"])
(4 e 1 ((Boat :?ocrs :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(5 x 4 ((NewCourse :?lab :?ncrs :?) nil nil) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids :?ocrs) #object[clojure.core$eval30339$fn__30340 0x55f92135 "clojure.core$eval30339$fn__30340@55f92135"])
(6 e 5 ((Boat :?crs :? :?boat UNDEFINED :? :? :?taa) nil nil) "bs:Boat Sail Point")
(7 x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval30344$fn__30345 0x4bf1ae12 "clojure.core$eval30344$fn__30345@4bf1ae12"])
(8 ex 1 ((Boat :? :? :?lab :?slp :?spd :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval30348$fn__30349 0x6fbf2049 "clojure.core$eval30348$fn__30349@6fbf2049"])
(9 e 7 ((Onboard :?boat :? :?view) nil nil) "bs:Boat Heel")
(10 x 1 ((Boat :? :? :?boat :?sp :? :?tk :?) nil nil) "bs:Boat Heel" 0 (:?view :?tk :?boat :?sp) #object[clojure.core$eval30355$fn__30356 0x24022a9a "clojure.core$eval30355$fn__30356@24022a9a"])
(11 e 7 ((Onboard :?boat :? :?) nil nil) "bs:Boat Pitching")
(12 i 8 ((Wave :? :?pit :?pin) nil nil))
(13 i 9 ((BoatPitch :?boat :? :?slp :?tim) nil nil))
(14 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval30359$fn__30360 0x5b2fa22b "clojure.core$eval30359$fn__30360@5b2fa22b"]) "bs:Boat Pitching" 0 (:?pit :?pin :?slp :?fids :?boat :?t) #object[clojure.core$eval30363$fn__30364 0x2008e484 "clojure.core$eval30363$fn__30364@2008e484"])
(15 e 7 ((Onboard :?boat :? :?view) nil nil) "bs:Boat Camera Check")
(16 i 10 ((CameraCheck :?del :? :?tim) nil nil))
(17 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval30373$fn__30374 0x688f7292 "clojure.core$eval30373$fn__30374@688f7292"]) "bs:Boat Camera Check" 0 (:?view :?fids :?boat :?del :?t) #object[clojure.core$eval30377$fn__30378 0x40322867 "clojure.core$eval30377$fn__30378@40322867"])
(18 e 2 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(19 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval30382$fn__30383 0x20a29342 "clojure.core$eval30382$fn__30383@20a29342"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval30386$fn__30387 0x18b434cf "clojure.core$eval30386$fn__30387@18b434cf"])
(20 ex 2 ((Clock :? :?t) (:?t) #object[clojure.core$eval30390$fn__30391 0x4c101f88 "clojure.core$eval30390$fn__30391@4c101f88"]) "sim:Start Simulation" 0 () #object[clojure.core$eval30394$fn__30395 0x1e2020fe "clojure.core$eval30394$fn__30395@1e2020fe"])
(21 e 1 ((Boat :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Veering")
(22 i 11 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(23 x 12 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval30398$fn__30399 0x4fdb3da3 "clojure.core$eval30398$fn__30399@4fdb3da3"])
(24 e 1 ((Boat :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Backing")
(25 i 13 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(26 x 12 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval30402$fn__30403 0x2c40809f "clojure.core$eval30402$fn__30403@2c40809f"])
(27 ex 6 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval30406$fn__30407 0x6534d5ae "clojure.core$eval30406$fn__30407@6534d5ae"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval30410$fn__30411 0x3d5e8096 "clojure.core$eval30410$fn__30411@3d5e8096"])
(28 e 6 ((Wind :?dir1 :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(29 x 14 ((WindChange :? :? :? :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval30415$fn__30416 0x2b87687f "clojure.core$eval30415$fn__30416@2b87687f"]) "ws:Wind Change Direction" 0 (:?dir2 :?fids :?dir1) #object[clojure.core$eval30419$fn__30420 0x6250d080 "clojure.core$eval30419$fn__30420@6250d080"])
(30 ex 6 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval30424$fn__30425 0x7090a3f3 "clojure.core$eval30424$fn__30425@7090a3f3"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval30428$fn__30429 0x22af57e3 "clojure.core$eval30428$fn__30429@22af57e3"])
(31 ex 12 ((BoatWindShift :? :? :?) nil nil) "ws:Boat Wind Shift End" 0 (:?fids) #object[clojure.core$eval30432$fn__30433 0x100e2c9f "clojure.core$eval30432$fn__30433@100e2c9f"])
(32 e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Small Oscillation")
(33 i 15 ((WindChange :? :? :? :? :? true :?sint :?sos :?t1 :?) nil nil))
(34 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval30436$fn__30437 0x74befb07 "clojure.core$eval30436$fn__30437@74befb07"]) "ws:Small Oscillation" 0 (:?dir :?sos :?sint :?fids :?t2) #object[clojure.core$eval30440$fn__30441 0x54a752db "clojure.core$eval30440$fn__30441@54a752db"])
(35 e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Big Oscillation")
(36 i 15 ((WindChange :? :?bint :?bos :? :? true :? :? :? :?t1) nil nil))
(37 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval30444$fn__30445 0x4e24128f "clojure.core$eval30444$fn__30445@4e24128f"]) "ws:Big Oscillation" 0 (:?dir :?bos :?fids :?bint :?t2) #object[clojure.core$eval30448$fn__30449 0x72541c7c "clojure.core$eval30448$fn__30449@72541c7c"])
(38 e 14 ((WindChange :?a :? :? :? :? :? :? :? :? :?) (:?a) #object[clojure.core$eval30455$fn__30456 0x5c7cdec2 "clojure.core$eval30455$fn__30456@5c7cdec2"]) "ws:WindChange First")
(39 x 14 (not (WindChange :? :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange First" 0 (:?fids) #object[clojure.core$eval30459$fn__30460 0x4ff6f797 "clojure.core$eval30459$fn__30460@4ff6f797"])
(40 e 16 ((WindChange true :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange Update")
(41 x 14 ((WindChange :?ass :? :? :? :? :? :? :? :? :?) (:?ass) #object[clojure.core$eval30463$fn__30464 0x57559c20 "clojure.core$eval30463$fn__30464@57559c20"]) "ws:WindChange Update" -1 (:?fids) #object[clojure.core$eval30467$fn__30468 0x2f09f0c7 "clojure.core$eval30467$fn__30468@2f09f0c7"])
(42 e 0 ((CZMLGenerator :? :? :? :? :? :? :?) nil nil) "ss:Mark on Map")
(43 i 17 ((Mark :? :? :? :? :? :? :? :?lab :?lat :? :?lon :? :? :? :? :?url :?) nil nil))
(44 i 2 ((Clock :? :?t) nil nil))
(45 x 3 (not (CZMLSpan :? :?lab :? :? :?) nil nil) "ss:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval30471$fn__30472 0x174ccc5f "clojure.core$eval30471$fn__30472@174ccc5f"])
(46 e 17 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Skipper Status")
(47 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(48 i 18 ((Skipper :?boat :? :?e :? :? :?mark :? :? :?sts :?) (:?sts) #object[clojure.core$eval30476$fn__30477 0x7f6fe10e "clojure.core$eval30476$fn__30477@7f6fe10e"]))
(49 i 1 ((Boat :? :? :?boat :? :? :? :?taa) nil nil))
(50 x 2 ((Clock :? :?) nil nil) "ss:Skipper Status" 0 (:?fids :?boat :?wnd :?mark :?e :?taa :?sts) #object[clojure.core$eval30480$fn__30481 0x7d8b4c10 "clojure.core$eval30480$fn__30481@7d8b4c10"])
(51 e 17 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Gainful Beating Course")
(52 i 19 ((Skipper :?boat :? :?e :? :? :?mark :? :? BEATING :?) nil nil))
(53 i 1 ((Boat :? :? :?boat :? :? :? :?taa) nil nil))
(54 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(55 x 20 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Gainful Beating Course" 0 (:?boat :?wnd :?mark :?e :?taa) #object[clojure.core$eval30486$fn__30487 0x67593b05 "clojure.core$eval30486$fn__30487@67593b05"])
(56 e 17 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course")
(57 i 21 ((Skipper :?boat :? :? :? :? :?mark :? :? CAN-ON-MARK :?) nil nil))
(58 i 1 ((Boat :? :? :?boat :? :? :? :?) nil nil))
(59 x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course" 0 (:?boat :?mark) #object[clojure.core$eval30492$fn__30493 0x6e503dbf "clojure.core$eval30492$fn__30493@6e503dbf"])
(60 e 22 ((Route :? :?mm :?tit) nil nil) "ss:Mark Near and Abaft")
(61 i 17 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil))
(62 i 18 ((Skipper :?boat :? :? :? :?lap :?mark :?rad :?tit :?sts :?) (:?sts) #object[clojure.core$eval30498$fn__30499 0x51dba1c9 "clojure.core$eval30498$fn__30499@51dba1c9"]))
(63 i 1 ((Boat :? :? :?boat :? :? :? :?) nil nil))
(64 x 2 ((Clock :? :?) (:?rad :?boat :?mark) #object[clojure.core$eval30503$fn__30504 0x17a6d955 "clojure.core$eval30503$fn__30504@17a6d955"]) "ss:Mark Near and Abaft" 0 (:?tit :?mm :?fids :?boat :?mark :?lap) #object[clojure.core$eval30507$fn__30508 0x45b4dfb9 "clojure.core$eval30507$fn__30508@45b4dfb9"])
(65 e 22 ((Route :? :?mm :?tit) nil nil) "ss:Start Route")
(66 x 23 ((Skipper :?boat :? :? :? 0 "NIL" :? :?tit :? :?) nil nil) "ss:Start Route" 0 (:?tit :?mm :?fids :?boat) #object[clojure.core$eval30511$fn__30512 0x39a1fab1 "clojure.core$eval30511$fn__30512@39a1fab1"])
(67 e 19 ((Skipper :?boat :? :?e :? :? :? :? :? BEATING :?) nil nil) "ss:Big Header on Beating")
(68 i 24 ((BoatWindShift :?boat :? HEADER) nil nil))
(69 i 1 ((Boat :? :? :?boat :? :? :?tack :?taa) nil nil))
(70 i 6 ((Wind :?dir :? :? :? :? :? :?sid) (:?sid) #object[clojure.core$eval30516$fn__30517 0x7c15d222 "clojure.core$eval30516$fn__30517@7c15d222"]))
(71 x 20 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Big Header on Beating" -1 (:?dir :?tack :?boat :?e :?taa) #object[clojure.core$eval30520$fn__30521 0x35e0b7bb "clojure.core$eval30520$fn__30521@35e0b7bb"])
(72 e 20 ((Advice :? :?dir1 :? "BIG HEADER NEW COURSE") nil nil) "ss:End of Big Header")
(73 x 6 ((Wind :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval30524$fn__30525 0x491fe03 "clojure.core$eval30524$fn__30525@491fe03"]) "ss:End of Big Header" 0 (:?fids) #object[clojure.core$eval30528$fn__30529 0x22c0354d "clojure.core$eval30528$fn__30529@22c0354d"])
(74 e 18 ((Skipper :?boat :?del :?e :? :? :? :? :? :? :?) nil nil) "ss:Shore Ahead")
(75 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(76 i 1 ((Boat :?crs :? :?boat :? :? :?tack :?taa) nil nil))
(77 i 25 ((ShoreCheck :? :? SHORE-AHEAD :? :?) nil nil))
(78 x 2 ((Clock :? :?t) nil nil) "ss:Shore Ahead" 0 (:?tack :?crs :?fids :?boat :?wnd :?del :?t :?e :?taa) #object[clojure.core$eval30532$fn__30533 0x4217038e "clojure.core$eval30532$fn__30533@4217038e"])
(79 e 26 ((Skipper :?boat :? :? :? :? :? :? :? OFF-SHORE :?t1) nil nil) "ss:Gone off Shore")
(80 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval30540$fn__30541 0x1ba7dde8 "clojure.core$eval30540$fn__30541@1ba7dde8"]) "ss:Gone off Shore" 0 (:?fids :?boat) #object[clojure.core$eval30544$fn__30545 0x44e40bca "clojure.core$eval30544$fn__30545@44e40bca"])
(81 ex 27 ((ShoreControl :?del :? :? :?) nil nil) "scs:Set Shore Check Interval" 0 (:?del) #object[clojure.core$eval30548$fn__30549 0x2ec713f6 "clojure.core$eval30548$fn__30549@2ec713f6"])
(82 e 27 ((ShoreControl :?del :? :? :?) nil nil) "scs:Start Shore Check")
(83 i 28 ((ShoreCheck :?boat :? START :? :?) nil nil))
(84 x 2 ((Clock :? :?t) nil nil) "scs:Start Shore Check" 0 (:?fids :?boat :?del :?t) #object[clojure.core$eval30552$fn__30553 0x5f3e0e7a "clojure.core$eval30552$fn__30553@5f3e0e7a"])
(85 e 27 ((ShoreControl :?del :?dis :? :?sho) nil nil) "scs:Repeat Shore Check")
(86 i 29 ((ShoreCheck :?boat :? REPEAT :?oter :?t1) nil nil))
(87 i 1 ((Boat :?crs :? :?boat :? :? :? :?) nil nil))
(88 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval30557$fn__30558 0x14b81c17 "clojure.core$eval30557$fn__30558@14b81c17"]) "scs:Repeat Shore Check" 0 (:?sho :?dis :?crs :?fids :?boat :?del :?t2 :?oter) #object[clojure.core$eval30561$fn__30562 0x7c27c67 "clojure.core$eval30561$fn__30562@7c27c67"])
(89 e 30 ((CZMLGenerator :?del :?fin :? :? START :? :?) nil nil) "cz:CZML Start Process")
(90 x 2 ((Clock :? :?t) nil nil) "cz:CZML Start Process" 0 (:?fin :?fids :?del :?t) #object[clojure.core$eval30570$fn__30571 0x66b5df70 "clojure.core$eval30570$fn__30571@66b5df70"])
(91 e 31 ((CZMLGenerator :? :? :? :?sta PROCESS :?tim :?) nil nil) "cz:CZML Finish")
(92 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval30574$fn__30575 0x5dd99b3d "clojure.core$eval30574$fn__30575@5dd99b3d"]) "cz:CZML Finish" 0 (:?sta :?fids) #object[clojure.core$eval30578$fn__30579 0x6eb1057e "clojure.core$eval30578$fn__30579@6eb1057e"])
(93 e 7 ((Onboard :?boat :? :?) nil nil) "cz:CZML Leg Generation")
(94 i 32 ((CZMLSpan :? :?lab :?p3d READY :?url) (:?lab :?boat) #object[clojure.core$eval30582$fn__30583 0x515bc9b3 "clojure.core$eval30582$fn__30583@515bc9b3"]))
(95 x 33 ((CZMLGenerator :? :?fin :? :?sta FINISH :? :?vis) nil nil) "cz:CZML Leg Generation" -1 (:?p3d :?fin :?sta :?lab :?fids :?boat :?url :?vis) #object[clojure.core$eval30586$fn__30587 0x290a2e52 "clojure.core$eval30586$fn__30587@290a2e52"])
(96 e 31 ((CZMLGenerator :? :? :? :? PROCESS :? :?) nil nil) "cz:CZMLSpan Ready")
(97 x 34 ((CZMLSpan :? :? :? START :?) nil nil) "cz:CZMLSpan Ready" 0 (:?fids) #object[clojure.core$eval30592$fn__30593 0x33db24ff "clojure.core$eval30592$fn__30593@33db24ff"])
(98 ex 33 ((CZMLGenerator :?del :?fin :? :? FINISH :? :?) nil nil) "cz:CZML Loop" 0 (:?fin :?fids :?del) #object[clojure.core$eval30596$fn__30597 0x3611bafd "clojure.core$eval30596$fn__30597@3611bafd"])
