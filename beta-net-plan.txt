(0 e 0 ((CZMLGenerator :? :? :?) nil nil) "bs:Boat on Map")
(1 i 1 ((Boat :?crs :? :? :? :?lab :? :? :? :? :?) nil nil))
(2 i 2 ((Clock :? :?t) nil nil))
(3 x 3 (not (CZMLSpan :? :?lab :? :?) nil nil) "bs:Boat on Map" 0 (:?crs :?lab :?t) #object[clojure.core$eval20375$fn__20376 0x541cb48a "clojure.core$eval20375$fn__20376@541cb48a"])
(4 e 1 ((Boat :?ocrs :? :? :? :?lab :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(5 x 4 ((NewCourse :?lab :?ncrs :?) nil nil) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids :?ocrs) #object[clojure.core$eval20381$fn__20382 0x3262c1eb "clojure.core$eval20381$fn__20382@3262c1eb"])
(6 e 5 ((Boat :?crs :? :? :? :?boat UNDEFINED :? :? :?taa :?) nil nil) "bs:Boat Sail Point")
(7 x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval20386$fn__20387 0x22549097 "clojure.core$eval20386$fn__20387@22549097"])
(8 ex 1 ((Boat :? :? :? :? :?lab :?slp :?spd :? :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval20390$fn__20391 0x54ddb3b8 "clojure.core$eval20390$fn__20391@54ddb3b8"])
(9 e 7 ((Onboard :?boat :? :?) nil nil) "bs:Boat Pitching")
(10 i 8 ((Wave :? :?pit :?pin) nil nil))
(11 i 9 ((BoatPitch :?boat :? :?slp :?tim) nil nil))
(12 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval20397$fn__20398 0x65d4f54d "clojure.core$eval20397$fn__20398@65d4f54d"]) "bs:Boat Pitching" 0 (:?pit :?pin :?slp :?fids :?boat :?t) #object[clojure.core$eval20401$fn__20402 0x411d0d85 "clojure.core$eval20401$fn__20402@411d0d85"])
(13 e 7 ((Onboard :?boat :? :?) nil nil) "bs:Boat Camera Check")
(14 i 10 ((CameraCheck :?del :? :?tim) nil nil))
(15 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval20411$fn__20412 0x47cbed19 "clojure.core$eval20411$fn__20412@47cbed19"]) "bs:Boat Camera Check" 0 (:?fids :?boat :?del :?t) #object[clojure.core$eval20415$fn__20416 0x7eb2c62b "clojure.core$eval20415$fn__20416@7eb2c62b"])
(16 e 11 ((ShoreControl :?del :?dis :? :?sho) nil nil) "bs:Shore Check")
(17 i 1 ((Boat :?crs :?ele :? :? :?boat :? :? :? :? :?tim) nil nil))
(18 i 12 ((Skipper :?boat :? :? :? :? :? :? :? :? :?) nil nil))
(19 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval20419$fn__20420 0x3c0e3a2d "clojure.core$eval20419$fn__20420@3c0e3a2d"]) "bs:Shore Check" 0 (:?sho :?dis :?crs :?ele :?fids :?boat :?del :?t) #object[clojure.core$eval20423$fn__20424 0x1556690c "clojure.core$eval20423$fn__20424@1556690c"])
(20 e 2 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(21 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval20436$fn__20437 0xd6ded9a "clojure.core$eval20436$fn__20437@d6ded9a"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval20440$fn__20441 0x6586e182 "clojure.core$eval20440$fn__20441@6586e182"])
(22 ex 2 ((Clock :? :?t) (:?t) #object[clojure.core$eval20444$fn__20445 0x2814704d "clojure.core$eval20444$fn__20445@2814704d"]) "sim:Start Simulation" 0 () #object[clojure.core$eval20448$fn__20449 0xeac724a "clojure.core$eval20448$fn__20449@eac724a"])
(23 e 1 ((Boat :? :? :? :? :?lab :? :? :?tack :? :?) nil nil) "ws:Wind Veering")
(24 i 13 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(25 x 14 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval20452$fn__20453 0x6c4f4f38 "clojure.core$eval20452$fn__20453@6c4f4f38"])
(26 e 1 ((Boat :? :? :? :? :?lab :? :? :?tack :? :?) nil nil) "ws:Wind Backing")
(27 i 15 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(28 x 14 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval20456$fn__20457 0x3e1729c2 "clojure.core$eval20456$fn__20457@3e1729c2"])
(29 ex 6 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval20460$fn__20461 0x358aa055 "clojure.core$eval20460$fn__20461@358aa055"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval20464$fn__20465 0x58d9ba8c "clojure.core$eval20464$fn__20465@58d9ba8c"])
(30 e 6 ((Wind :?dir1 :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(31 x 16 ((WindChange :? :? :? :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval20469$fn__20470 0x4e790820 "clojure.core$eval20469$fn__20470@4e790820"]) "ws:Wind Change Direction" 0 (:?dir2 :?fids :?dir1) #object[clojure.core$eval20473$fn__20474 0x49a77114 "clojure.core$eval20473$fn__20474@49a77114"])
(32 ex 6 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval20478$fn__20479 0x294ff87d "clojure.core$eval20478$fn__20479@294ff87d"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval20482$fn__20483 0x3cd72a02 "clojure.core$eval20482$fn__20483@3cd72a02"])
(33 ex 14 ((BoatWindShift :? :? :?) nil nil) "ws:Boat Wind Shift End" 0 (:?fids) #object[clojure.core$eval20486$fn__20487 0x3ae90db0 "clojure.core$eval20486$fn__20487@3ae90db0"])
(34 e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Small Oscillation")
(35 i 17 ((WindChange :? :? :? :? :? true :?sint :?sos :?t1 :?) nil nil))
(36 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval20490$fn__20491 0x48b4e428 "clojure.core$eval20490$fn__20491@48b4e428"]) "ws:Small Oscillation" 0 (:?dir :?sos :?sint :?fids :?t2) #object[clojure.core$eval20494$fn__20495 0x1e6e6153 "clojure.core$eval20494$fn__20495@1e6e6153"])
(37 e 6 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Big Oscillation")
(38 i 17 ((WindChange :? :?bint :?bos :? :? true :? :? :? :?t1) nil nil))
(39 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval20498$fn__20499 0x1beccfa6 "clojure.core$eval20498$fn__20499@1beccfa6"]) "ws:Big Oscillation" 0 (:?dir :?bos :?fids :?bint :?t2) #object[clojure.core$eval20502$fn__20503 0x699ad5e6 "clojure.core$eval20502$fn__20503@699ad5e6"])
(40 e 16 ((WindChange :?a :? :? :? :? :? :? :? :? :?) (:?a) #object[clojure.core$eval20509$fn__20510 0x660e959 "clojure.core$eval20509$fn__20510@660e959"]) "ws:WindChange First")
(41 x 16 (not (WindChange :? :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange First" 0 (:?fids) #object[clojure.core$eval20513$fn__20514 0x6be9743f "clojure.core$eval20513$fn__20514@6be9743f"])
(42 e 18 ((WindChange true :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange Update")
(43 x 16 ((WindChange :?ass :? :? :? :? :? :? :? :? :?) (:?ass) #object[clojure.core$eval20517$fn__20518 0x1685071b "clojure.core$eval20517$fn__20518@1685071b"]) "ws:WindChange Update" -1 (:?fids) #object[clojure.core$eval20521$fn__20522 0x290fd5c8 "clojure.core$eval20521$fn__20522@290fd5c8"])
(44 e 0 ((CZMLGenerator :? :? :?) nil nil) "ss:Mark on Map")
(45 i 19 ((Mark :? :? :? :? :? :? :? :?lab :?lat :? :?lon :? :? :? :? :? :?) nil nil))
(46 i 2 ((Clock :? :?t) nil nil))
(47 x 3 (not (CZMLSpan :? :?lab :? :?) nil nil) "ss:Mark on Map" 0 (:?lon :?lab :?lat :?t) #object[clojure.core$eval20525$fn__20526 0x2824cb91 "clojure.core$eval20525$fn__20526@2824cb91"])
(48 e 19 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Skipper Status")
(49 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(50 i 12 ((Skipper :?boat :? :?e :? :? :?mark :? :? :?sts :?) (:?sts) #object[clojure.core$eval20530$fn__20531 0x8cc1a26 "clojure.core$eval20530$fn__20531@8cc1a26"]))
(51 i 1 ((Boat :? :? :? :? :?boat :? :? :? :?taa :?) nil nil))
(52 x 2 ((Clock :? :?) nil nil) "ss:Skipper Status" 0 (:?fids :?boat :?wnd :?mark :?e :?taa :?sts) #object[clojure.core$eval20534$fn__20535 0x364f79fb "clojure.core$eval20534$fn__20535@364f79fb"])
(53 e 19 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Gainful Beating Course")
(54 i 20 ((Skipper :?boat :? :?e :? :? :?mark :? :? BEATING :?) nil nil))
(55 i 1 ((Boat :? :? :? :? :?boat :? :? :? :?taa :?) nil nil))
(56 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(57 x 21 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Gainful Beating Course" 0 (:?boat :?wnd :?mark :?e :?taa) #object[clojure.core$eval20540$fn__20541 0x61394b6f "clojure.core$eval20540$fn__20541@61394b6f"])
(58 e 19 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course")
(59 i 22 ((Skipper :?boat :? :? :? :? :?mark :? :? CAN-ON-MARK :?) nil nil))
(60 i 1 ((Boat :? :? :? :? :?boat :? :? :? :? :?) nil nil))
(61 x 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course" 0 (:?boat :?mark) #object[clojure.core$eval20546$fn__20547 0x6fcf6c9a "clojure.core$eval20546$fn__20547@6fcf6c9a"])
(62 e 23 ((Route :? :?mm :?tit) nil nil) "ss:Mark Near and Abaft")
(63 i 19 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil))
(64 i 12 ((Skipper :?boat :? :? :? :?lap :?mark :?rad :?tit :?sts :?) (:?sts) #object[clojure.core$eval20552$fn__20553 0x7ba566f "clojure.core$eval20552$fn__20553@7ba566f"]))
(65 i 1 ((Boat :? :? :? :? :?boat :? :? :? :? :?) nil nil))
(66 x 2 ((Clock :? :?) (:?rad :?boat :?mark) #object[clojure.core$eval20557$fn__20558 0x4a7777c2 "clojure.core$eval20557$fn__20558@4a7777c2"]) "ss:Mark Near and Abaft" 0 (:?tit :?mm :?fids :?boat :?mark :?lap) #object[clojure.core$eval20561$fn__20562 0x613e2fd0 "clojure.core$eval20561$fn__20562@613e2fd0"])
(67 e 23 ((Route :? :?mm :?tit) nil nil) "ss:Start Route")
(68 x 24 ((Skipper :?boat :? :? :? 0 "NIL" :? :?tit :? :?) nil nil) "ss:Start Route" 0 (:?tit :?mm :?fids :?boat) #object[clojure.core$eval20565$fn__20566 0x758134d1 "clojure.core$eval20565$fn__20566@758134d1"])
(69 e 20 ((Skipper :?boat :? :?e :? :? :? :? :? BEATING :?) nil nil) "ss:Big Header on Beating")
(70 i 25 ((BoatWindShift :?boat :? HEADER) nil nil))
(71 i 1 ((Boat :? :? :? :? :?boat :? :? :?tack :?taa :?) nil nil))
(72 i 6 ((Wind :?dir :? :? :? :? :? :?sid) (:?sid) #object[clojure.core$eval20570$fn__20571 0x205d1d20 "clojure.core$eval20570$fn__20571@205d1d20"]))
(73 x 21 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Big Header on Beating" -1 (:?dir :?tack :?boat :?e :?taa) #object[clojure.core$eval20574$fn__20575 0x5165a78e "clojure.core$eval20574$fn__20575@5165a78e"])
(74 e 21 ((Advice :? :?dir1 :? "BIG HEADER NEW COURSE") nil nil) "ss:End of Big Header")
(75 x 6 ((Wind :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval20578$fn__20579 0x41b542dd "clojure.core$eval20578$fn__20579@41b542dd"]) "ss:End of Big Header" 0 (:?fids) #object[clojure.core$eval20582$fn__20583 0x3deec186 "clojure.core$eval20582$fn__20583@3deec186"])
(76 e 26 ((Skipper :?boat :?del :?e :? :? :? :? :? SHORE-AHEAD :?) nil nil) "ss:Shore Ahead")
(77 i 6 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(78 i 1 ((Boat :?crs :? :? :? :?boat :? :? :?tack :?taa :?) nil nil))
(79 x 2 ((Clock :? :?t) nil nil) "ss:Shore Ahead" 0 (:?tack :?crs :?fids :?boat :?wnd :?del :?t :?e :?taa) #object[clojure.core$eval20586$fn__20587 0x75127f06 "clojure.core$eval20586$fn__20587@75127f06"])
(80 e 27 ((Skipper :?boat :? :? :? :? :? :? :? OFF-SHORE :?t1) nil nil) "ss:Gone off Shore")
(81 x 2 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval20594$fn__20595 0x937effd "clojure.core$eval20594$fn__20595@937effd"]) "ss:Gone off Shore" 0 (:?fids :?boat) #object[clojure.core$eval20598$fn__20599 0x62fff7ac "clojure.core$eval20598$fn__20599@62fff7ac"])
(82 e 0 ((CZMLGenerator :?del :? :?vis) nil nil) "cz:CZML Navob Leg Generation")
(83 i 7 ((Onboard :?boat :? :?) nil nil))
(84 i nil ((Boat :? :? :? :? :?boat :? :?snd :? :? :? :?) nil nil))
(85 i 3 ((CZMLSpan :? :?lab :?ops :?tim) (:?lab :?boat) #object[clojure.core$eval20602$fn__20603 0x29d6f884 "clojure.core$eval20602$fn__20603@29d6f884"]))
(86 x 2 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval20606$fn__20607 0x4f5a58f7 "clojure.core$eval20606$fn__20607@4f5a58f7"]) "cz:CZML Navob Leg Generation" -1 (:?snd :?lab :?fids :?boat :?ops :?del :?vis :?t) #object[clojure.core$eval20610$fn__20611 0x79241ee6 "clojure.core$eval20610$fn__20611@79241ee6"])
