(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :? :? :?) (:?lab) #object[clojure.core$eval17784$fn__17785 0x4522bc43 "clojure.core$eval17784$fn__17785@4522bc43"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval17788$fn__17789 0x6c147c77 "clojure.core$eval17788$fn__17789@6c147c77"])
(1 ex 1 ((Mark :? :?lab :?lat :?lon) (:?lab) #object[clojure.core$eval17793$fn__17794 0x15421b8 "clojure.core$eval17793$fn__17794@15421b8"]) "bs:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval17797$fn__17798 0x2d1aa981 "clojure.core$eval17797$fn__17798@2d1aa981"])
(2 e 0 ((Boat :?ocrs :? :?lab :? :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(3 x 2 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval17802$fn__17803 0x7d0b8c52 "clojure.core$eval17802$fn__17803@7d0b8c52"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval17806$fn__17807 0x190d618a "clojure.core$eval17806$fn__17807@190d618a"])
(4 e 3 ((Boat :?crs :? :? :? :? :? :?taa :? UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(5 x 4 ((Wind :?wnd :? :?) nil nil) "bs:Boat Wind and Tack" 1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval17810$fn__17811 0x727fd43c "clojure.core$eval17810$fn__17811@727fd43c"])
(6 e 5 ((Boat :? :? :?boat :? UNDEFINED :? :? :? :?) nil nil) "bs:Make for Mark")
(7 i 1 ((Mark :? :?mark :? :?) nil nil))
(8 x 6 ((Crew :?boat MAKE-FOR-MARK :? :?mark) nil nil) "bs:Make for Mark" 0 (:?fids :?boat :?mark) #object[clojure.core$eval17814$fn__17815 0x2abd1c57 "clojure.core$eval17814$fn__17815@2abd1c57"])
(9 ex 7 ((Boat :? :? :?lab :? CRS-ON-MARK :? :? :? :?wnd) (:?wnd) #object[clojure.core$eval17820$fn__17821 0x6bb69582 "clojure.core$eval17820$fn__17821@6bb69582"]) "bs:Boat Status" 0 (:?lab :?fids :?wnd) #object[clojure.core$eval17824$fn__17825 0x5ae89212 "clojure.core$eval17824$fn__17825@5ae89212"])
(10 e 4 ((Wind :?wnd :? :?) nil nil) "bs:Select Beating Tack")
(11 x 8 ((Boat :?crs :? :?boat :? BEATING :? :?taa :? HEADWIND) nil nil) "bs:Select Beating Tack" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval17828$fn__17829 0x5c490d16 "clojure.core$eval17828$fn__17829@5c490d16"])
(12 e 9 ((Boat :?crs :? :?boat :?mark BEATING :? :?taa DONE CLOSEHAULED) nil nil) "bs:Beating Till Gainful")
(13 i 1 ((Mark :? :?mark :? :?) nil nil))
(14 x 10 ((Clock :? :?) nil nil) "bs:Beating Till Gainful" 0 (:?crs :?fids :?boat :?mark :?taa) #object[clojure.core$eval17833$fn__17834 0x35e11831 "clojure.core$eval17833$fn__17834@35e11831"])
(15 ex 11 ((Boat :?crs :? :?boat :? :? :?tack :?taa GO-ABOUT CLOSEHAULED) nil nil) "bs:Go-about While Beating" 0 (:?tack :?crs :?fids :?boat :?taa) #object[clojure.core$eval17839$fn__17840 0x22ce22c7 "clojure.core$eval17839$fn__17840@22ce22c7"])
(16 ex 12 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval17846$fn__17847 0x3b73a05e "clojure.core$eval17846$fn__17847@3b73a05e"])
(17 e 10 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(18 x 10 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval17850$fn__17851 0x341591ba "clojure.core$eval17850$fn__17851@341591ba"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval17854$fn__17855 0x12a22485 "clojure.core$eval17854$fn__17855@12a22485"])
(19 ex 10 ((Clock :? :?t) (:?t) #object[clojure.core$eval17858$fn__17859 0x1e002362 "clojure.core$eval17858$fn__17859@1e002362"]) "sim:Start Simulation" 0 () #object[clojure.core$eval17862$fn__17863 0x2fb1c700 "clojure.core$eval17862$fn__17863@2fb1c700"])
