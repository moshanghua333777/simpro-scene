(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :?) (:?lab) #object[clojure.core$eval24173$fn__24174 0x2da2e140 "clojure.core$eval24173$fn__24174@2da2e140"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval24177$fn__24178 0x1e4186d4 "clojure.core$eval24177$fn__24178@1e4186d4"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval24182$fn__24183 0x3b644718 "clojure.core$eval24182$fn__24183@3b644718"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval24186$fn__24187 0x4f549057 "clojure.core$eval24186$fn__24187@4f549057"])
(3 e 2 ((Boat :?crs :? :? :? :?taa :? UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Wind and Tack" -1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval24190$fn__24191 0x67a269cf "clojure.core$eval24190$fn__24191@67a269cf"])
(5 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval24194$fn__24195 0x5fadbe07 "clojure.core$eval24194$fn__24195@5fadbe07"])
(6 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(7 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval24198$fn__24199 0x68fd1df1 "clojure.core$eval24198$fn__24199@68fd1df1"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval24202$fn__24203 0x6c83e1de "clojure.core$eval24202$fn__24203@6c83e1de"])
(8 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval24206$fn__24207 0x5f5ae30b "clojure.core$eval24206$fn__24207@5f5ae30b"]) "sim:Start Simulation" 0 () #object[clojure.core$eval24210$fn__24211 0x137bb91c "clojure.core$eval24210$fn__24211@137bb91c"])
(9 ex 3 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval24214$fn__24215 0x79928f0 "clojure.core$eval24214$fn__24215@79928f0"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval24218$fn__24219 0xe6b167 "clojure.core$eval24218$fn__24219@e6b167"])
(10 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(11 x 6 ((MapObEvent :? :?crs :? "Wind" :? :? :? "UPD_COURSE") (:?dir :?crs) #object[clojure.core$eval24223$fn__24224 0x5fb1032d "clojure.core$eval24223$fn__24224@5fb1032d"]) "ws:Wind Change Direction" 0 (:?dir :?crs :?fids) #object[clojure.core$eval24227$fn__24228 0x7e71a3eb "clojure.core$eval24227$fn__24228@7e71a3eb"])
(12 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Veering")
(13 x 7 ((Wind :? :? :? :? :? VEERING :?) nil nil) "ws:Wind Veering" -1 (:?tack :?fids) #object[clojure.core$eval24231$fn__24232 0x330f87c3 "clojure.core$eval24231$fn__24232@330f87c3"])
(14 ex 3 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval24235$fn__24236 0x41c90656 "clojure.core$eval24235$fn__24236@41c90656"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval24239$fn__24240 0x68e194cb "clojure.core$eval24239$fn__24240@68e194cb"])
(15 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Backing")
(16 x 8 ((Wind :? :? :? :? :? BACKING :?) nil nil) "ws:Wind Backing" -1 (:?tack :?fids) #object[clojure.core$eval24243$fn__24244 0x7779428f "clojure.core$eval24243$fn__24244@7779428f"])
