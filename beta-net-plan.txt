(0 ex 0 ((Boat :?crs :? :? :?lab :? :? :? :?) (:?lab) #object[clojure.core$eval14983$fn__14984 0x30e6ffe0 "clojure.core$eval14983$fn__14984@30e6ffe0"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval14987$fn__14988 0x3cd72317 "clojure.core$eval14987$fn__14988@3cd72317"])
(1 e 0 ((Boat :?ocrs :? :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((NewCourse :?lab :?ncrs :?) nil nil) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids :?ocrs) #object[clojure.core$eval14992$fn__14993 0x251d069f "clojure.core$eval14992$fn__14993@251d069f"])
(3 e 2 ((Boat :?crs :? :? :?boat UNDEFINED :? :? :?taa) nil nil) "bs:Boat Sail Point")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval14997$fn__14998 0x49dcabb3 "clojure.core$eval14997$fn__14998@49dcabb3"])
(5 ex 0 ((Boat :? :? :? :?lab :?slp :?spd :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval15001$fn__15002 0x3920bad5 "clojure.core$eval15001$fn__15002@3920bad5"])
(6 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval15008$fn__15009 0x6e55aa9d "clojure.core$eval15008$fn__15009@6e55aa9d"])
(7 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(8 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval15012$fn__15013 0x5959a04 "clojure.core$eval15012$fn__15013@5959a04"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval15016$fn__15017 0x442f3356 "clojure.core$eval15016$fn__15017@442f3356"])
(9 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval15020$fn__15021 0x2f917d73 "clojure.core$eval15020$fn__15021@2f917d73"]) "sim:Start Simulation" 0 () #object[clojure.core$eval15024$fn__15025 0x7e9bf882 "clojure.core$eval15024$fn__15025@7e9bf882"])
(10 e 0 ((Boat :? :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Veering")
(11 i 6 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(12 x 7 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval15028$fn__15029 0x304285d4 "clojure.core$eval15028$fn__15029@304285d4"])
(13 e 0 ((Boat :? :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Backing")
(14 i 8 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(15 x 7 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval15032$fn__15033 0x4cc3e5ca "clojure.core$eval15032$fn__15033@4cc3e5ca"])
(16 ex 3 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval15036$fn__15037 0x1c25f87f "clojure.core$eval15036$fn__15037@1c25f87f"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval15040$fn__15041 0x48d99298 "clojure.core$eval15040$fn__15041@48d99298"])
(17 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(18 x 9 ((NewCourse "Wind" :?crs :?) (:?dir :?crs) #object[clojure.core$eval15045$fn__15046 0x2e8009fb "clojure.core$eval15045$fn__15046@2e8009fb"]) "ws:Wind Change Direction" 0 (:?dir :?crs :?fids) #object[clojure.core$eval15049$fn__15050 0xfc7289a "clojure.core$eval15049$fn__15050@fc7289a"])
(19 ex 3 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval15054$fn__15055 0x132008c2 "clojure.core$eval15054$fn__15055@132008c2"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval15058$fn__15059 0x5f50fde7 "clojure.core$eval15058$fn__15059@5f50fde7"])
(20 ex 7 ((BoatWindShift :? :? :?) nil nil) "ws:Boat Wind Shift End" 0 (:?fids) #object[clojure.core$eval15062$fn__15063 0x79dbdf43 "clojure.core$eval15062$fn__15063@79dbdf43"])
(21 ex 10 ((Mark :? :? :? :? :? :? :? :?lab :?lat :? :?lon :? :? :? :? :?url :?) (:?lab) #object[clojure.core$eval15066$fn__15067 0x644156a4 "clojure.core$eval15066$fn__15067@644156a4"]) "ss:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval15070$fn__15071 0x5c10b75a "clojure.core$eval15070$fn__15071@5c10b75a"])
(22 e 10 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Skipper Status")
(23 i 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(24 i 11 ((Skipper :?boat :?e :? :? :?mark :? :? :?sts) (:?sts) #object[clojure.core$eval15075$fn__15076 0x3ff9f18f "clojure.core$eval15075$fn__15076@3ff9f18f"]))
(25 i 0 ((Boat :? :? :? :?boat :? :? :? :?taa) nil nil))
(26 x 5 ((Clock :? :?) nil nil) "ss:Skipper Status" 0 (:?fids :?boat :?wnd :?mark :?e :?taa :?sts) #object[clojure.core$eval15079$fn__15080 0x2f20f885 "clojure.core$eval15079$fn__15080@2f20f885"])
(27 e 10 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Gainful Beating Course")
(28 i 12 ((Skipper :?boat :?e :? :? :?mark :? :? BEATING) nil nil))
(29 i 0 ((Boat :? :? :? :?boat :? :? :? :?taa) nil nil))
(30 i 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(31 x 13 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Gainful Beating Course" 0 (:?boat :?wnd :?mark :?e :?taa) #object[clojure.core$eval15085$fn__15086 0x154754df "clojure.core$eval15085$fn__15086@154754df"])
(32 e 10 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course")
(33 i 14 ((Skipper :?boat :? :? :? :?mark :? :? CAN-ON-MARK) nil nil))
(34 i 0 ((Boat :? :? :? :?boat :? :? :? :?) nil nil))
(35 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course" 0 (:?boat :?mark) #object[clojure.core$eval15091$fn__15092 0x52ecde2f "clojure.core$eval15091$fn__15092@52ecde2f"])
(36 e 15 ((Route :? :?mm :?tit) nil nil) "ss:Mark Near and Abaft")
(37 i 10 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil))
(38 i 11 ((Skipper :?boat :? :? :?lap :?mark :?rad :?tit :?sts) (:?sts) #object[clojure.core$eval15097$fn__15098 0xdb35013 "clojure.core$eval15097$fn__15098@db35013"]))
(39 i 0 ((Boat :? :? :? :?boat :? :? :? :?) nil nil))
(40 x 5 ((Clock :? :?) (:?rad :?boat :?mark) #object[clojure.core$eval15102$fn__15103 0x446e788f "clojure.core$eval15102$fn__15103@446e788f"]) "ss:Mark Near and Abaft" 0 (:?tit :?mm :?fids :?boat :?mark :?lap) #object[clojure.core$eval15106$fn__15107 0x1934cfc5 "clojure.core$eval15106$fn__15107@1934cfc5"])
(41 e 15 ((Route :? :?mm :?tit) nil nil) "ss:Start Route")
(42 x 16 ((Skipper :?boat :? :? 0 "NIL" :? :?tit :?) nil nil) "ss:Start Route" 0 (:?tit :?mm :?fids :?boat) #object[clojure.core$eval15110$fn__15111 0x60487e25 "clojure.core$eval15110$fn__15111@60487e25"])
(43 e 12 ((Skipper :?boat :?e :? :? :? :? :? BEATING) nil nil) "ss:Big Header on Beating")
(44 i 17 ((BoatWindShift :?boat :? HEADER) nil nil))
(45 i 0 ((Boat :? :? :? :?boat :? :? :?tack :?taa) nil nil))
(46 i 3 ((Wind :?dir :? :? :? :? :? :?sid) (:?sid) #object[clojure.core$eval15115$fn__15116 0x500c2978 "clojure.core$eval15115$fn__15116@500c2978"]))
(47 x 13 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Big Header on Beating" -1 (:?dir :?tack :?boat :?e :?taa) #object[clojure.core$eval15119$fn__15120 0xac820ae "clojure.core$eval15119$fn__15120@ac820ae"])
(48 e 13 ((Advice :? :?dir1 :? "BIG HEADER NEW COURSE") nil nil) "ss:End of Big Header")
(49 x 3 ((Wind :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval15123$fn__15124 0x18298f59 "clojure.core$eval15123$fn__15124@18298f59"]) "ss:End of Big Header" 0 (:?fids) #object[clojure.core$eval15127$fn__15128 0x6c95f2c5 "clojure.core$eval15127$fn__15128@6c95f2c5"])
