(0 e 0 ((Point :? :? nil :?x :?y) nil nil) "ib:Inner Point")
(1 i 1 ((Point :? :? :? :?x1 :?y) (:?x :?x1) #object[clojure.core$eval10051$fn__10052 0x22c3764f "clojure.core$eval10051$fn__10052@22c3764f"]))
(2 i 1 ((Point :? :? :? :?x2 :?y) (:?x2 :?x) #object[clojure.core$eval10055$fn__10056 0x4156d6d3 "clojure.core$eval10055$fn__10056@4156d6d3"]))
(3 i 1 ((Point :? :? :? :?x :?y1) (:?y1 :?y) #object[clojure.core$eval10059$fn__10060 0x6503ab8d "clojure.core$eval10059$fn__10060@6503ab8d"]))
(4 x 1 ((Point :? :? :? :?x :?y2) (:?y2 :?y) #object[clojure.core$eval10063$fn__10064 0x127f4cca "clojure.core$eval10063$fn__10064@127f4cca"]) "ib:Inner Point" 0 (:?fids) #object[clojure.core$eval10067$fn__10068 0x4763e204 "clojure.core$eval10067$fn__10068@4763e204"])
(5 ex 2 ((Point :? :? "INSIDE" :? :?) nil nil) "id:Retract Inner Point" 1 (:?fids) #object[clojure.core$eval10071$fn__10072 0x5bc58498 "clojure.core$eval10071$fn__10072@5bc58498"])
(6 ex 3 ((Point :? :? "BORDER" :? :?) nil nil) "id:Retract Border Point" 1 (:?fids) #object[clojure.core$eval10075$fn__10076 0xa9c10e8 "clojure.core$eval10075$fn__10076@a9c10e8"])
(7 ex 1 ((Point :? :?ll :? :?x :?y) nil nil) "ib:Display Point" 2 (:?ll :?x :?y) #object[clojure.core$eval10079$fn__10080 0x47b88d98 "clojure.core$eval10079$fn__10080@47b88d98"])
(8 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoNorth")
(9 x 1 ((Point :? :?llp :? :?xe :?yp) (:?yp :?ye) #object[clojure.core$eval10083$fn__10084 0x2cce253f "clojure.core$eval10083$fn__10084@2cce253f"]) "ib:GoNorth" 3 (:?lle :?pp :?llp :?yp :?fids) #object[clojure.core$eval10087$fn__10088 0x1957fa9f "clojure.core$eval10087$fn__10088@1957fa9f"])
(10 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoSouth")
(11 x 1 ((Point :? :?llp :? :?xe :?yp) (:?yp :?ye) #object[clojure.core$eval10091$fn__10092 0x703a5394 "clojure.core$eval10091$fn__10092@703a5394"]) "ib:GoSouth" 3 (:?lle :?pp :?llp :?yp :?fids) #object[clojure.core$eval10095$fn__10096 0x57cc10f "clojure.core$eval10095$fn__10096@57cc10f"])
(12 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoEast")
(13 x 1 ((Point :? :?llp :? :?xp :?ye) (:?xp :?xe) #object[clojure.core$eval10099$fn__10100 0x40b1fd27 "clojure.core$eval10099$fn__10100@40b1fd27"]) "ib:GoEast" 3 (:?lle :?pp :?llp :?xp :?fids) #object[clojure.core$eval10103$fn__10104 0x42846059 "clojure.core$eval10103$fn__10104@42846059"])
(14 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoWest")
(15 x 1 ((Point :? :?llp :? :?xp :?ye) (:?xp :?xe) #object[clojure.core$eval10107$fn__10108 0x1945194a "clojure.core$eval10107$fn__10108@1945194a"]) "ib:GoWest" 3 (:?lle :?pp :?llp :?xp :?fids) #object[clojure.core$eval10111$fn__10112 0x65c7e14a "clojure.core$eval10111$fn__10112@65c7e14a"])
(16 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoNorthWest")
(17 x 1 ((Point :? :?llp :? :?xp :?yp) (:?yp :?xp :?xe :?ye) #object[clojure.core$eval10115$fn__10116 0x8f401fb "clojure.core$eval10115$fn__10116@8f401fb"]) "ib:GoNorthWest" 4 (:?lle :?pp :?llp :?yp :?xp :?fids) #object[clojure.core$eval10120$fn__10121 0x6dddab37 "clojure.core$eval10120$fn__10121@6dddab37"])
(18 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoSouthEast")
(19 x 1 ((Point :? :?llp :? :?xp :?yp) (:?yp :?xp :?xe :?ye) #object[clojure.core$eval10124$fn__10125 0x2821d6fb "clojure.core$eval10124$fn__10125@2821d6fb"]) "ib:GoSouthEast" 4 (:?lle :?pp :?llp :?yp :?xp :?fids) #object[clojure.core$eval10129$fn__10130 0xd12fde2 "clojure.core$eval10129$fn__10130@d12fde2"])
(20 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoSouthWest")
(21 x 1 ((Point :? :?llp :? :?xp :?yp) (:?yp :?xp :?xe :?ye) #object[clojure.core$eval10133$fn__10134 0x5a4819bc "clojure.core$eval10133$fn__10134@5a4819bc"]) "ib:GoSouthWest" 4 (:?lle :?pp :?llp :?yp :?xp :?fids) #object[clojure.core$eval10138$fn__10139 0x314b3556 "clojure.core$eval10138$fn__10139@314b3556"])
(22 e 4 ((Segment :? :?lle :?pp :?xe :?ye) nil nil) "ib:GoNorthEast")
(23 x 1 ((Point :? :?llp :? :?xp :?yp) (:?yp :?xp :?xe :?ye) #object[clojure.core$eval10142$fn__10143 0x15a31e1 "clojure.core$eval10142$fn__10143@15a31e1"]) "ib:GoNorthEast" 4 (:?lle :?pp :?llp :?yp :?xp :?fids) #object[clojure.core$eval10147$fn__10148 0x17110466 "clojure.core$eval10147$fn__10148@17110466"])
(24 ex 1 ((Point :? :?ll :? :?x :?y) nil nil) "id:Segment" 5 (:?ll :?fids :?x :?y) #object[clojure.core$eval10151$fn__10152 0x567b719b "clojure.core$eval10151$fn__10152@567b719b"])
(25 ex 4 ((Segment :? :?ll :?pts :?x :?y) (:?ll :?pts) #object[clojure.core$eval10155$fn__10156 0x44b379ee "clojure.core$eval10155$fn__10156@44b379ee"]) "ib:Close Segment" 6 (:?ll :?fids :?pts) #object[clojure.core$eval10160$fn__10161 0x6dd4715f "clojure.core$eval10160$fn__10161@6dd4715f"])
(26 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments HH1")
(27 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10164$fn__10165 0x5b3f5631 "clojure.core$eval10164$fn__10165@5b3f5631"]) "ib:Connect two Segments HH1" 0 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10168$fn__10169 0x35903f4c "clojure.core$eval10168$fn__10169@35903f4c"])
(28 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments TT1")
(29 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10172$fn__10173 0x590f1035 "clojure.core$eval10172$fn__10173@590f1035"]) "ib:Connect two Segments TT1" 0 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10176$fn__10177 0x75cd9eae "clojure.core$eval10176$fn__10177@75cd9eae"])
(30 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments HT1")
(31 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10180$fn__10181 0x29510f06 "clojure.core$eval10180$fn__10181@29510f06"]) "ib:Connect two Segments HT1" 0 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10184$fn__10185 0x32e8a252 "clojure.core$eval10184$fn__10185@32e8a252"])
(32 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments HH2")
(33 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10188$fn__10189 0x2f426d42 "clojure.core$eval10188$fn__10189@2f426d42"]) "ib:Connect two Segments HH2" 1 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10192$fn__10193 0x4c6e7b38 "clojure.core$eval10192$fn__10193@4c6e7b38"])
(34 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments TT2")
(35 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10196$fn__10197 0x6c7c875 "clojure.core$eval10196$fn__10197@6c7c875"]) "ib:Connect two Segments TT2" 1 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10200$fn__10201 0x56d62d54 "clojure.core$eval10200$fn__10201@56d62d54"])
(36 e 5 ((Segment :? "CLOSED" :?pp1 :? :?) nil nil) "ib:Connect two Segments HT2")
(37 x 5 ((Segment :? "CLOSED" :?pp2 :? :?) (:?pp2 :?pp1) #object[clojure.core$eval10204$fn__10205 0x65278221 "clojure.core$eval10204$fn__10205@65278221"]) "ib:Connect two Segments HT2" 1 (:?fids :?pp2 :?pp1) #object[clojure.core$eval10208$fn__10209 0x2b9d8cb7 "clojure.core$eval10208$fn__10209@2b9d8cb7"])
(38 ex 5 ((Segment :? "CLOSED" :?pts :? :?) nil nil) "ib:Display Segment" 2 (:?pts) #object[clojure.core$eval10212$fn__10213 0x28cbd6f8 "clojure.core$eval10212$fn__10213@28cbd6f8"])
