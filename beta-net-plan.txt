(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :? :?) (:?lab) #object[clojure.core$eval17663$fn__17664 0x31f2e947 "clojure.core$eval17663$fn__17664@31f2e947"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval17667$fn__17668 0x441feabb "clojure.core$eval17667$fn__17668@441feabb"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval17672$fn__17673 0x2d97bd2d "clojure.core$eval17672$fn__17673@2d97bd2d"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval17676$fn__17677 0x2c25d9ae "clojure.core$eval17676$fn__17677@2c25d9ae"])
(3 e 2 ((Boat :?crs :? :? UNDEFINED :? :? :?taa :?) nil nil) "bs:Boat Sail Point")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval17680$fn__17681 0x79a95825 "clojure.core$eval17680$fn__17681@79a95825"])
(5 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval17684$fn__17685 0x493b0eeb "clojure.core$eval17684$fn__17685@493b0eeb"])
(6 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(7 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval17688$fn__17689 0x2c867a51 "clojure.core$eval17688$fn__17689@2c867a51"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval17692$fn__17693 0x7cffebb8 "clojure.core$eval17692$fn__17693@7cffebb8"])
(8 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval17696$fn__17697 0x17921879 "clojure.core$eval17696$fn__17697@17921879"]) "sim:Start Simulation" 0 () #object[clojure.core$eval17700$fn__17701 0x6e0e2d78 "clojure.core$eval17700$fn__17701@6e0e2d78"])
