(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :? :? :?) (:?lab) #object[clojure.core$eval8775$fn__8776 0x3a9d6a48 "clojure.core$eval8775$fn__8776@3a9d6a48"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval8779$fn__8780 0x1ce43442 "clojure.core$eval8779$fn__8780@1ce43442"])
(1 ex 1 ((Mark :? :?lab :?lat :?lon) (:?lab) #object[clojure.core$eval8784$fn__8785 0x17cd0e5a "clojure.core$eval8784$fn__8785@17cd0e5a"]) "bs:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval8788$fn__8789 0x54329e8a "clojure.core$eval8788$fn__8789@54329e8a"])
(2 e 0 ((Boat :?ocrs :? :?lab :? :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(3 x 2 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval8793$fn__8794 0x10dac271 "clojure.core$eval8793$fn__8794@10dac271"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval8797$fn__8798 0x2b99828e "clojure.core$eval8797$fn__8798@2b99828e"])
(4 e 3 ((Boat :?crs :? :? :? :? :? :?taa :? UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(5 x 4 ((Wind :?wnd :? :?) nil nil) "bs:Boat Wind and Tack" 1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval8801$fn__8802 0x45c1cc55 "clojure.core$eval8801$fn__8802@45c1cc55"])
(6 e 5 ((Boat :? :? :?boat :? UNDEFINED :? :? :? :?) nil nil) "bs:Make for Mark")
(7 i 1 ((Mark :? :?mark :? :?) nil nil))
(8 x 6 ((Crew :?boat MAKE-FOR-MARK :? :?mark) nil nil) "bs:Make for Mark" 0 (:?fids :?boat :?mark) #object[clojure.core$eval8805$fn__8806 0x4c347862 "clojure.core$eval8805$fn__8806@4c347862"])
(9 ex 7 ((Boat :? :? :?lab :? CRS-ON-MARK :? :? :? :?wnd) (:?wnd) #object[clojure.core$eval8811$fn__8812 0x2dd3264a "clojure.core$eval8811$fn__8812@2dd3264a"]) "bs:Boat Status" 0 (:?lab :?fids :?wnd) #object[clojure.core$eval8815$fn__8816 0x62e32d25 "clojure.core$eval8815$fn__8816@62e32d25"])
(10 e 4 ((Wind :?wnd :? :?) nil nil) "bs:Select Beating Tack")
(11 x 8 ((Boat :?crs :? :?boat :? BEATING :? :?taa :? HEADWIND) nil nil) "bs:Select Beating Tack" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval8819$fn__8820 0x144d09bd "clojure.core$eval8819$fn__8820@144d09bd"])
(12 e 9 ((Boat :?crs :? :?boat :?mark BEATING :? :?taa DONE CLOSEHAULED) nil nil) "bs:Beating Till Gainful")
(13 i 1 ((Mark :? :?mark :? :?) nil nil))
(14 x 10 ((Clock :? :?) nil nil) "bs:Beating Till Gainful" 0 (:?crs :?fids :?boat :?mark :?taa) #object[clojure.core$eval8824$fn__8825 0x680d31bf "clojure.core$eval8824$fn__8825@680d31bf"])
(15 ex 11 ((Boat :?crs :? :?boat :? :? :?tack :?taa GO-ABOUT CLOSEHAULED) nil nil) "bs:Go-about While Beating" 0 (:?tack :?crs :?fids :?boat :?taa) #object[clojure.core$eval8830$fn__8831 0x72e8e060 "clojure.core$eval8830$fn__8831@72e8e060"])
(16 ex 12 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval8837$fn__8838 0x5721d995 "clojure.core$eval8837$fn__8838@5721d995"])
(17 e 10 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(18 x 10 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval8841$fn__8842 0x7cf6a00b "clojure.core$eval8841$fn__8842@7cf6a00b"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval8845$fn__8846 0x7c993104 "clojure.core$eval8845$fn__8846@7c993104"])
(19 ex 10 ((Clock :? :?t) (:?t) #object[clojure.core$eval8849$fn__8850 0x961e99b "clojure.core$eval8849$fn__8850@961e99b"]) "sim:Start Simulation" 0 () #object[clojure.core$eval8853$fn__8854 0x443510f5 "clojure.core$eval8853$fn__8854@443510f5"])
