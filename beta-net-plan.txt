(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :?) (:?lab) #object[clojure.core$eval16635$fn__16636 0x2819becd "clojure.core$eval16635$fn__16636@2819becd"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval16639$fn__16640 0x47defb44 "clojure.core$eval16639$fn__16640@47defb44"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval16644$fn__16645 0x5053c8f "clojure.core$eval16644$fn__16645@5053c8f"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval16648$fn__16649 0x6eae4650 "clojure.core$eval16648$fn__16649@6eae4650"])
(3 e 2 ((Boat :?crs :? :? :? :?taa :? UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Wind and Tack" -1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval16652$fn__16653 0x5a388234 "clojure.core$eval16652$fn__16653@5a388234"])
(5 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval16656$fn__16657 0x4c38b19c "clojure.core$eval16656$fn__16657@4c38b19c"])
(6 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(7 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval16660$fn__16661 0xd6cbcf6 "clojure.core$eval16660$fn__16661@d6cbcf6"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval16664$fn__16665 0x13f672db "clojure.core$eval16664$fn__16665@13f672db"])
(8 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval16668$fn__16669 0x35ac7610 "clojure.core$eval16668$fn__16669@35ac7610"]) "sim:Start Simulation" 0 () #object[clojure.core$eval16672$fn__16673 0x53c33187 "clojure.core$eval16672$fn__16673@53c33187"])
(9 ex 3 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval16676$fn__16677 0x2736a097 "clojure.core$eval16676$fn__16677@2736a097"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval16680$fn__16681 0x1700152 "clojure.core$eval16680$fn__16681@1700152"])
(10 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(11 x 6 ((MapObEvent :? :?crs :? "Wind" :? :? :? "UPD_COURSE") (:?dir :?crs) #object[clojure.core$eval16685$fn__16686 0x9d535e "clojure.core$eval16685$fn__16686@9d535e"]) "ws:Wind Change Direction" 0 (:?dir :?crs :?fids) #object[clojure.core$eval16689$fn__16690 0x6007fa5d "clojure.core$eval16689$fn__16690@6007fa5d"])
(12 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Veering")
(13 i 7 ((Skipper :? :?lab :? :? :? :? NIL) nil nil))
(14 x 8 ((Wind :? :? :? :? :? VEERING :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval16693$fn__16694 0x73726b5e "clojure.core$eval16693$fn__16694@73726b5e"])
(15 ex 3 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval16697$fn__16698 0x2de8b897 "clojure.core$eval16697$fn__16698@2de8b897"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval16701$fn__16702 0x2abca06d "clojure.core$eval16701$fn__16702@2abca06d"])
(16 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Backing")
(17 i 7 ((Skipper :? :?lab :? :? :? :? NIL) nil nil))
(18 x 9 ((Wind :? :? :? :? :? BACKING :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval16705$fn__16706 0x2377bf0e "clojure.core$eval16705$fn__16706@2377bf0e"])
(19 ex 10 ((Mark :? :?lab :?lat :?lon) (:?lab) #object[clojure.core$eval16709$fn__16710 0x6ce5cae "clojure.core$eval16709$fn__16710@6ce5cae"]) "ss:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval16713$fn__16714 0x4fec8094 "clojure.core$eval16713$fn__16714@4fec8094"])
(20 e 0 ((Boat :? :? :?boat :? :? :? :?) nil nil) "ss:Make for Mark Advice")
(21 i 10 ((Mark :? :?mark :? :?) nil nil))
(22 x 11 ((Skipper MAKE-FOR-MARK :?boat :? :? :?mark :? :?) nil nil) "ss:Make for Mark Advice" 0 (:?fids :?boat :?mark) #object[clojure.core$eval16718$fn__16719 0x324fdea "clojure.core$eval16718$fn__16719@324fdea"])
(23 e 12 ((Skipper :? :?boat :? :? :? CRS-ON-MARK :?) nil nil) "ss:Status Beating")
(24 x 13 ((Boat :? :? :?boat :? :? :? HEADWIND) nil nil) "ss:Status Beating" 0 (:?fids) #object[clojure.core$eval16724$fn__16725 0x177616cc "clojure.core$eval16724$fn__16725@177616cc"])
(25 e 12 ((Skipper :? :?boat :? :? :? CRS-ON-MARK :?) nil nil) "ss:Status Go on Mark")
(26 x 0 ((Boat :? :? :?boat :? :? :? :?wnd) (:?wnd) #object[clojure.core$eval16728$fn__16729 0x1b6ef65e "clojure.core$eval16728$fn__16729@1b6ef65e"]) "ss:Status Go on Mark" 0 (:?fids) #object[clojure.core$eval16732$fn__16733 0x2e6101ee "clojure.core$eval16732$fn__16733@2e6101ee"])
(27 e 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select Beating Tack")
(28 i 13 ((Boat :?crs :? :?boat :? :?taa :? HEADWIND) nil nil))
(29 x 14 ((Skipper :? :? :?e :? :? BEATING :?) nil nil) "ss:Select Beating Tack" 0 (:?crs :?boat :?wnd :?e :?taa) #object[clojure.core$eval16736$fn__16737 0x715cbcf1 "clojure.core$eval16736$fn__16737@715cbcf1"])
(30 e 10 ((Mark :? :?mark :? :?) nil nil) "ss:Beating till Gainful")
(31 i 14 ((Skipper :? :?boat :?e :? :?mark BEATING :?) nil nil))
(32 i 15 ((Boat :? :? :?boat :? :?taa DONE CLOSEHAULED) nil nil))
(33 x 5 ((Clock :? :?) (:?boat :?mark :?e :?taa) #object[clojure.core$eval16741$fn__16742 0x6b9d870d "clojure.core$eval16741$fn__16742@6b9d870d"]) "ss:Beating till Gainful" 0 (:?fids :?boat) #object[clojure.core$eval16745$fn__16746 0x108064e "clojure.core$eval16745$fn__16746@108064e"])
(34 ex 16 ((Boat :?crs :? :?boat :?tack :?taa GO-ABOUT CLOSEHAULED) nil nil) "ss:Go-about While Beating" 0 (:?tack :?crs :?fids :?boat :?taa) #object[clojure.core$eval16749$fn__16750 0x6797dde2 "clojure.core$eval16749$fn__16750@6797dde2"])
(35 e 0 ((Boat :?crs :? :?lab :?tack :? :? :?) nil nil) "ss:Bear Away on Beating")
(36 i 17 ((Wind :? :? :? :? :? NIL :?sid) nil nil))
(37 x 18 ((Skipper :? :?lab :? :? :? BEATING LIFT) nil nil) "ss:Bear Away on Beating" 0 (:?tack :?sid :?crs :?lab :?fids) #object[clojure.core$eval16756$fn__16757 0xfbb99bc "clojure.core$eval16756$fn__16757@fbb99bc"])
(38 e 17 ((Wind :? :? :? :? :? NIL :?sid) nil nil) "ss:Bear Away till Can on Mark")
(39 x 18 ((Skipper :? :?boat :? :? :?mark BEATING LIFT) (:?sid :?boat :?mark) #object[clojure.core$eval16761$fn__16762 0x1a3b73ba "clojure.core$eval16761$fn__16762@1a3b73ba"]) "ss:Bear Away till Can on Mark" -1 (:?fids :?boat) #object[clojure.core$eval16765$fn__16766 0x174eb82 "clojure.core$eval16765$fn__16766@174eb82"])
(40 e 17 ((Wind :? :? :? :? :? NIL :?) nil nil) "ss:Lift on Sraight Course")
(41 x 19 ((Skipper :? :? :? :? :? GO-ON-MARK LIFT) nil nil) "ss:Lift on Sraight Course" 0 (:?fids) #object[clojure.core$eval16769$fn__16770 0x556b6f3c "clojure.core$eval16769$fn__16770@556b6f3c"])
