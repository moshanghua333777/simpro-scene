(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :?) (:?lab) #object[clojure.core$eval32392$fn__32393 0x35545f78 "clojure.core$eval32392$fn__32393@35545f78"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval32396$fn__32397 0x63c6d3c3 "clojure.core$eval32396$fn__32397@63c6d3c3"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((NewCourse :?lab :?ncrs :?) nil nil) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids :?ocrs) #object[clojure.core$eval32402$fn__32403 0x18f7c185 "clojure.core$eval32402$fn__32403@18f7c185"])
(3 e 2 ((Boat :?crs :? :?boat UNDEFINED :? :? :?taa) nil nil) "bs:Boat Sail Point")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval32407$fn__32408 0x303f4ba "clojure.core$eval32407$fn__32408@303f4ba"])
(5 ex 0 ((Boat :? :? :?lab :?slp :?spd :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval32411$fn__32412 0x14bbd43d "clojure.core$eval32411$fn__32412@14bbd43d"])
(6 ex 0 ((Boat :? :? :?boat :?sp :? :?tk :?) nil nil) "bs:Boat Heel" 0 (:?tk :?boat :?sp) #object[clojure.core$eval32418$fn__32419 0x413655a2 "clojure.core$eval32418$fn__32419@413655a2"])
(7 e 4 ((Wave :? :?pit :?pin) nil nil) "bs:Boat Pitching")
(8 i 5 ((BoatPitch :?boat :? :?slp :?tim) nil nil))
(9 x 6 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval32427$fn__32428 0x676b4fe8 "clojure.core$eval32427$fn__32428@676b4fe8"]) "bs:Boat Pitching" 0 (:?pit :?pin :?slp :?fids :?boat :?t) #object[clojure.core$eval32431$fn__32432 0x7b51d19b "clojure.core$eval32431$fn__32432@7b51d19b"])
(10 e 6 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(11 x 6 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval32441$fn__32442 0x3101f8f0 "clojure.core$eval32441$fn__32442@3101f8f0"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval32445$fn__32446 0x42692037 "clojure.core$eval32445$fn__32446@42692037"])
(12 ex 6 ((Clock :? :?t) (:?t) #object[clojure.core$eval32449$fn__32450 0x7fc0239d "clojure.core$eval32449$fn__32450@7fc0239d"]) "sim:Start Simulation" 0 () #object[clojure.core$eval32453$fn__32454 0xae8f8f7 "clojure.core$eval32453$fn__32454@ae8f8f7"])
(13 e 0 ((Boat :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Veering")
(14 i 7 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(15 x 8 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval32457$fn__32458 0x34105722 "clojure.core$eval32457$fn__32458@34105722"])
(16 e 0 ((Boat :? :? :?lab :? :? :?tack :?) nil nil) "ws:Wind Backing")
(17 i 9 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(18 x 8 (not (BoatWindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval32461$fn__32462 0x3ff3b10f "clojure.core$eval32461$fn__32462@3ff3b10f"])
(19 ex 3 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval32465$fn__32466 0x4151a1a7 "clojure.core$eval32465$fn__32466@4151a1a7"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval32469$fn__32470 0xcb3c63a "clojure.core$eval32469$fn__32470@cb3c63a"])
(20 e 3 ((Wind :?dir1 :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(21 x 10 ((WindChange :? :? :? :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval32474$fn__32475 0x3a2c39c9 "clojure.core$eval32474$fn__32475@3a2c39c9"]) "ws:Wind Change Direction" 0 (:?dir2 :?fids :?dir1) #object[clojure.core$eval32478$fn__32479 0x18f59c4a "clojure.core$eval32478$fn__32479@18f59c4a"])
(22 ex 3 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval32483$fn__32484 0x54655a6a "clojure.core$eval32483$fn__32484@54655a6a"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval32487$fn__32488 0x46f5d4ca "clojure.core$eval32487$fn__32488@46f5d4ca"])
(23 ex 8 ((BoatWindShift :? :? :?) nil nil) "ws:Boat Wind Shift End" 0 (:?fids) #object[clojure.core$eval32491$fn__32492 0x1dcc5fac "clojure.core$eval32491$fn__32492@1dcc5fac"])
(24 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Small Oscillation")
(25 i 11 ((WindChange :? :? :? :? :? true :?sint :?sos :?t1 :?) nil nil))
(26 x 6 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval32495$fn__32496 0x296f8793 "clojure.core$eval32495$fn__32496@296f8793"]) "ws:Small Oscillation" 0 (:?dir :?sos :?sint :?fids :?t2) #object[clojure.core$eval32499$fn__32500 0x57272ede "clojure.core$eval32499$fn__32500@57272ede"])
(27 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Big Oscillation")
(28 i 11 ((WindChange :? :?bint :?bos :? :? true :? :? :? :?t1) nil nil))
(29 x 6 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval32503$fn__32504 0x3f1cf374 "clojure.core$eval32503$fn__32504@3f1cf374"]) "ws:Big Oscillation" 0 (:?dir :?bos :?fids :?bint :?t2) #object[clojure.core$eval32507$fn__32508 0x4052fa04 "clojure.core$eval32507$fn__32508@4052fa04"])
(30 e 10 ((WindChange :?a :? :? :? :? :? :? :? :? :?) (:?a) #object[clojure.core$eval32514$fn__32515 0x15d4be82 "clojure.core$eval32514$fn__32515@15d4be82"]) "ws:WindChange First")
(31 x 10 (not (WindChange :? :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange First" 0 (:?fids) #object[clojure.core$eval32518$fn__32519 0x7beb2338 "clojure.core$eval32518$fn__32519@7beb2338"])
(32 e 12 ((WindChange true :? :? :? :? :? :? :? :? :?) nil nil) "ws:WindChange Update")
(33 x 10 ((WindChange :?ass :? :? :? :? :? :? :? :? :?) (:?ass) #object[clojure.core$eval32522$fn__32523 0x23b4e862 "clojure.core$eval32522$fn__32523@23b4e862"]) "ws:WindChange Update" -1 (:?fids) #object[clojure.core$eval32526$fn__32527 0x74e1b4ca "clojure.core$eval32526$fn__32527@74e1b4ca"])
(34 e 13 ((Mark :? :? :? :? :? :? :? :?lab :?lat :? :?lon :? :? :? :? :?url :?) nil nil) "ss:Mark on Map")
(35 i 6 ((Clock :? :?t) nil nil))
(36 x 14 (not (Other :? :?lab :? :? :? :? :?) nil nil) "ss:Mark on Map" 0 (:?lab :?t) #object[clojure.core$eval32530$fn__32531 0x44f1247a "clojure.core$eval32530$fn__32531@44f1247a"])
(37 e 13 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Skipper Status")
(38 i 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(39 i 15 ((Skipper :?boat :? :?e :? :? :?mark :? :? :?sts :?) (:?sts) #object[clojure.core$eval32535$fn__32536 0x66a12d3f "clojure.core$eval32535$fn__32536@66a12d3f"]))
(40 i 0 ((Boat :? :? :?boat :? :? :? :?taa) nil nil))
(41 x 6 ((Clock :? :?) nil nil) "ss:Skipper Status" 0 (:?fids :?boat :?wnd :?mark :?e :?taa :?sts) #object[clojure.core$eval32539$fn__32540 0x62d22e71 "clojure.core$eval32539$fn__32540@62d22e71"])
(42 e 13 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Gainful Beating Course")
(43 i 16 ((Skipper :?boat :? :?e :? :? :?mark :? :? BEATING :?) nil nil))
(44 i 0 ((Boat :? :? :?boat :? :? :? :?taa) nil nil))
(45 i 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(46 x 17 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Gainful Beating Course" 0 (:?boat :?wnd :?mark :?e :?taa) #object[clojure.core$eval32545$fn__32546 0x1b6c9105 "clojure.core$eval32545$fn__32546@1b6c9105"])
(47 e 13 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course")
(48 i 18 ((Skipper :?boat :? :? :? :? :?mark :? :? CAN-ON-MARK :?) nil nil))
(49 i 0 ((Boat :? :? :?boat :? :? :? :?) nil nil))
(50 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select on Mark Course" 0 (:?boat :?mark) #object[clojure.core$eval32551$fn__32552 0x56f3b4e6 "clojure.core$eval32551$fn__32552@56f3b4e6"])
(51 e 19 ((Route :? :?mm :?tit) nil nil) "ss:Mark Near and Abaft")
(52 i 13 ((Mark :? :? :? :? :? :? :? :?mark :? :? :? :? :? :? :? :? :?) nil nil))
(53 i 15 ((Skipper :?boat :? :? :? :?lap :?mark :?rad :?tit :?sts :?) (:?sts) #object[clojure.core$eval32557$fn__32558 0x3954a3d2 "clojure.core$eval32557$fn__32558@3954a3d2"]))
(54 i 0 ((Boat :? :? :?boat :? :? :? :?) nil nil))
(55 x 6 ((Clock :? :?) (:?rad :?boat :?mark) #object[clojure.core$eval32562$fn__32563 0x4a86a32f "clojure.core$eval32562$fn__32563@4a86a32f"]) "ss:Mark Near and Abaft" 0 (:?tit :?mm :?fids :?boat :?mark :?lap) #object[clojure.core$eval32566$fn__32567 0x351df7c3 "clojure.core$eval32566$fn__32567@351df7c3"])
(56 e 19 ((Route :? :?mm :?tit) nil nil) "ss:Start Route")
(57 x 20 ((Skipper :?boat :? :? :? 0 "NIL" :? :?tit :? :?) nil nil) "ss:Start Route" 0 (:?tit :?mm :?fids :?boat) #object[clojure.core$eval32570$fn__32571 0x7e822102 "clojure.core$eval32570$fn__32571@7e822102"])
(58 e 16 ((Skipper :?boat :? :?e :? :? :? :? :? BEATING :?) nil nil) "ss:Big Header on Beating")
(59 i 21 ((BoatWindShift :?boat :? HEADER) nil nil))
(60 i 0 ((Boat :? :? :?boat :? :? :?tack :?taa) nil nil))
(61 i 3 ((Wind :?dir :? :? :? :? :? :?sid) (:?sid) #object[clojure.core$eval32575$fn__32576 0x62544733 "clojure.core$eval32575$fn__32576@62544733"]))
(62 x 17 (not (Advice :?boat :? :? "BIG HEADER NEW COURSE") nil nil) "ss:Big Header on Beating" -1 (:?dir :?tack :?boat :?e :?taa) #object[clojure.core$eval32579$fn__32580 0x1db40f8d "clojure.core$eval32579$fn__32580@1db40f8d"])
(63 e 17 ((Advice :? :?dir1 :? "BIG HEADER NEW COURSE") nil nil) "ss:End of Big Header")
(64 x 3 ((Wind :?dir2 :? :? :? :? :? :?) (:?dir2 :?dir1) #object[clojure.core$eval32583$fn__32584 0x47cd4017 "clojure.core$eval32583$fn__32584@47cd4017"]) "ss:End of Big Header" 0 (:?fids) #object[clojure.core$eval32587$fn__32588 0x28a8e3dd "clojure.core$eval32587$fn__32588@28a8e3dd"])
(65 e 15 ((Skipper :?boat :?del :?e :? :? :? :? :? :? :?) nil nil) "ss:Shore Ahead")
(66 i 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil))
(67 i 0 ((Boat :?crs :? :?boat :? :? :?tack :?taa) nil nil))
(68 i 22 ((ShoreCheck :? :? SHORE-AHEAD :? :?) nil nil))
(69 x 6 ((Clock :? :?t) nil nil) "ss:Shore Ahead" 0 (:?tack :?crs :?fids :?boat :?wnd :?del :?t :?e :?taa) #object[clojure.core$eval32591$fn__32592 0x68055424 "clojure.core$eval32591$fn__32592@68055424"])
(70 e 23 ((Skipper :?boat :? :? :? :? :? :? :? OFF-SHORE :?t1) nil nil) "ss:Gone off Shore")
(71 x 6 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval32599$fn__32600 0x5570e6ce "clojure.core$eval32599$fn__32600@5570e6ce"]) "ss:Gone off Shore" 0 (:?fids :?boat) #object[clojure.core$eval32603$fn__32604 0x7810d98f "clojure.core$eval32603$fn__32604@7810d98f"])
(72 ex 24 ((ShoreControl :?del :? :? :?) nil nil) "scs:Set Shore Check Interval" 0 (:?del) #object[clojure.core$eval32607$fn__32608 0x17c97b5b "clojure.core$eval32607$fn__32608@17c97b5b"])
(73 e 24 ((ShoreControl :?del :? :? :?) nil nil) "scs:Start Shore Check")
(74 i 25 ((ShoreCheck :?boat :? START :? :?) nil nil))
(75 x 6 ((Clock :? :?t) nil nil) "scs:Start Shore Check" 0 (:?fids :?boat :?del :?t) #object[clojure.core$eval32611$fn__32612 0x55afb9f2 "clojure.core$eval32611$fn__32612@55afb9f2"])
(76 e 24 ((ShoreControl :?del :?dis :? :?sho) nil nil) "scs:Repeat Shore Check")
(77 i 26 ((ShoreCheck :?boat :? REPEAT :?oter :?t1) nil nil))
(78 i 0 ((Boat :?crs :? :?boat :? :? :? :?) nil nil))
(79 x 6 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval32616$fn__32617 0x73b631f "clojure.core$eval32616$fn__32617@73b631f"]) "scs:Repeat Shore Check" 0 (:?sho :?dis :?crs :?fids :?boat :?del :?t2 :?oter) #object[clojure.core$eval32620$fn__32621 0x79990ed6 "clojure.core$eval32620$fn__32621@79990ed6"])
(80 e 27 ((OthersView :?del :? :?vis) nil nil) "ov:CZML-LegGeneration")
(81 i 0 ((Boat :? :? :?boat :? :? :? :?) nil nil))
(82 i 14 ((Other :? :?olab :?lat :?lon :?p41 :?tim :?url) nil nil))
(83 x 6 ((Clock :? :?t) (:?tim :?t) #object[clojure.core$eval32629$fn__32630 0x2556a11d "clojure.core$eval32629$fn__32630@2556a11d"]) "ov:CZML-LegGeneration" 0 (:?olab :?fids :?boat :?p41 :?del :?url :?vis :?t) #object[clojure.core$eval32633$fn__32634 0xd1eec6c "clojure.core$eval32633$fn__32634@d1eec6c"])
