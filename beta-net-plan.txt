(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :? :?) (:?lab) #object[clojure.core$eval14938$fn__14939 0x3d5dec9c "clojure.core$eval14938$fn__14939@3d5dec9c"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval14942$fn__14943 0x50b15f5f "clojure.core$eval14942$fn__14943@50b15f5f"])
(1 ex 1 ((Mark :? :?lab :?lat :?lon) (:?lab) #object[clojure.core$eval14947$fn__14948 0x64500a0d "clojure.core$eval14947$fn__14948@64500a0d"]) "bs:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval14951$fn__14952 0x52c97018 "clojure.core$eval14951$fn__14952@52c97018"])
(2 e 0 ((Boat :?ocrs :? :?lab :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(3 x 2 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval14956$fn__14957 0x464cfb23 "clojure.core$eval14956$fn__14957@464cfb23"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval14960$fn__14961 0x3e09dfc7 "clojure.core$eval14960$fn__14961@3e09dfc7"])
(4 e 3 ((Boat :?crs :? :? :? :? :? :?taa UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(5 x 4 ((Wind :?wnd :? :?) nil nil) "bs:Boat Wind and Tack" 1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval14964$fn__14965 0x74139636 "clojure.core$eval14964$fn__14965@74139636"])
(6 e 5 ((Boat :? :? :?boat :? UNDEFINED :? :? :?) nil nil) "bs:Make for Mark")
(7 i 1 ((Mark :? :?mark :? :?) nil nil))
(8 x 6 ((Crew :?boat MAKE-FOR-MARK :? :?mark) nil nil) "bs:Make for Mark" 0 (:?fids :?boat :?mark) #object[clojure.core$eval14968$fn__14969 0x51295d28 "clojure.core$eval14968$fn__14969@51295d28"])
(9 ex 7 ((Boat :? :? :?lab :? CRS-ON-MARK :? :? :?wnd) (:?wnd) #object[clojure.core$eval14974$fn__14975 0x509e420e "clojure.core$eval14974$fn__14975@509e420e"]) "bs:Boat Status" 0 (:?lab :?fids :?wnd) #object[clojure.core$eval14978$fn__14979 0x4491b0fc "clojure.core$eval14978$fn__14979@4491b0fc"])
(10 e 4 ((Wind :?wnd :? :?) nil nil) "bs:Select Beating Tack")
(11 x 8 ((Boat :?crs :? :?boat :? BEATING :? :?taa HEADWIND) nil nil) "bs:Select Beating Tack" 0 (:?crs :?fids :?boat :?wnd :?taa) #object[clojure.core$eval14982$fn__14983 0x5318a7b5 "clojure.core$eval14982$fn__14983@5318a7b5"])
(12 ex 9 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval14987$fn__14988 0x70c2e828 "clojure.core$eval14987$fn__14988@70c2e828"])
(13 e 10 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(14 x 10 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval14991$fn__14992 0x744b8928 "clojure.core$eval14991$fn__14992@744b8928"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval14995$fn__14996 0x2cdaa6f8 "clojure.core$eval14995$fn__14996@2cdaa6f8"])
(15 ex 10 ((Clock :? :?t) (:?t) #object[clojure.core$eval14999$fn__15000 0x4fd98632 "clojure.core$eval14999$fn__15000@4fd98632"]) "sim:Start Simulation" 0 () #object[clojure.core$eval15003$fn__15004 0x2d8090fc "clojure.core$eval15003$fn__15004@2d8090fc"])
