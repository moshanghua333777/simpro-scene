(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :? :?) (:?lab) #object[clojure.core$eval8798$fn__8799 0x21e9b271 "clojure.core$eval8798$fn__8799@21e9b271"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval8802$fn__8803 0x4d71501b "clojure.core$eval8802$fn__8803@4d71501b"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval8807$fn__8808 0x5b22b39b "clojure.core$eval8807$fn__8808@5b22b39b"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval8811$fn__8812 0x1ade898c "clojure.core$eval8811$fn__8812@1ade898c"])
(3 e 2 ((Boat :?crs :? :? UNDEFINED :? :? :?taa :?) nil nil) "bs:Boat Sail Point")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Sail Point" 0 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval8815$fn__8816 0x44a3169e "clojure.core$eval8815$fn__8816@44a3169e"])
(5 ex 0 ((Boat :? :? :?lab :?slp :?spd :? :? :?) nil nil) "bs:Boat Speed" 0 (:?spd :?lab :?slp) #object[clojure.core$eval8819$fn__8820 0x30f030e7 "clojure.core$eval8819$fn__8820@30f030e7"])
(6 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval8826$fn__8827 0x786d73c3 "clojure.core$eval8826$fn__8827@786d73c3"])
(7 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(8 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval8830$fn__8831 0x7519dd21 "clojure.core$eval8830$fn__8831@7519dd21"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval8834$fn__8835 0x767eaed8 "clojure.core$eval8834$fn__8835@767eaed8"])
(9 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval8838$fn__8839 0x7481135d "clojure.core$eval8838$fn__8839@7481135d"]) "sim:Start Simulation" 0 () #object[clojure.core$eval8842$fn__8843 0x63d60d11 "clojure.core$eval8842$fn__8843@63d60d11"])
