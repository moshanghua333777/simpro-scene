(0 ex 0 ((Boat :?crs :? :?lab :? :? :? :?) (:?lab) #object[clojure.core$eval17579$fn__17580 0x6a360327 "clojure.core$eval17579$fn__17580@6a360327"]) "bs:Boat on Map" 0 (:?crs :?lab) #object[clojure.core$eval17583$fn__17584 0x1c3a59ae "clojure.core$eval17583$fn__17584@1c3a59ae"])
(1 e 0 ((Boat :?ocrs :? :?lab :? :? :? :?) nil nil) "bs:Boat Change Course")
(2 x 1 ((MapObEvent :? :?ncrs :? :?lab :? :? :? "UPD_COURSE") (:?ncrs :?ocrs) #object[clojure.core$eval17588$fn__17589 0x7976ceaa "clojure.core$eval17588$fn__17589@7976ceaa"]) "bs:Boat Change Course" 0 (:?ncrs :?lab :?fids) #object[clojure.core$eval17592$fn__17593 0x49850f39 "clojure.core$eval17592$fn__17593@49850f39"])
(3 e 2 ((Boat :?crs :? :? :? :?taa :? UNDEFINED) nil nil) "bs:Boat Wind and Tack")
(4 x 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "bs:Boat Wind and Tack" 1 (:?crs :?fids :?wnd :?taa) #object[clojure.core$eval17596$fn__17597 0x65faa8bb "clojure.core$eval17596$fn__17597@65faa8bb"])
(5 ex 4 ((MapObEvent :? :? :? :? :? :? :? :?) nil nil) "sim:RetractMapObEvent" 10 (:?fids) #object[clojure.core$eval17600$fn__17601 0x3ba5ad63 "clojure.core$eval17600$fn__17601@3ba5ad63"])
(6 e 5 ((Clock :? :?t1) nil nil) "sim:RetractSecondClock")
(7 x 5 ((Clock :? :?t2) (:?t1 :?t2) #object[clojure.core$eval17604$fn__17605 0x29b7d93c "clojure.core$eval17604$fn__17605@29b7d93c"]) "sim:RetractSecondClock" -10 (:?fids) #object[clojure.core$eval17608$fn__17609 0x2a627e0f "clojure.core$eval17608$fn__17609@2a627e0f"])
(8 ex 5 ((Clock :? :?t) (:?t) #object[clojure.core$eval17612$fn__17613 0x3c40dcd2 "clojure.core$eval17612$fn__17613@3c40dcd2"]) "sim:Start Simulation" 0 () #object[clojure.core$eval17616$fn__17617 0x57db4a86 "clojure.core$eval17616$fn__17617@57db4a86"])
(9 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Veering")
(10 i 6 ((Wind :? :? :? :? :? VEERING :?) nil nil))
(11 x 7 (not (WindShift :?lab :? :?) nil nil) "ws:Wind Veering" -1 (:?tack :?lab :?fids) #object[clojure.core$eval17620$fn__17621 0x45dcbddf "clojure.core$eval17620$fn__17621@45dcbddf"])
(12 e 0 ((Boat :? :? :?lab :?tack :? :? :?) nil nil) "ws:Wind Backing")
(13 i 8 ((Wind :? :? :? :? :? BACKING :?) nil nil))
(14 x 7 (not (WindShift :?lab :? :?) nil nil) "ws:Wind Backing" -1 (:?tack :?lab :?fids) #object[clojure.core$eval17624$fn__17625 0x4dfe9a08 "clojure.core$eval17624$fn__17625@4dfe9a08"])
(15 ex 3 ((Wind :?dir :? :? :?lat :?lon :? :?) () #object[clojure.core$eval17628$fn__17629 0x33b3b612 "clojure.core$eval17628$fn__17629@33b3b612"]) "ws:Wind on Map" 0 (:?dir :?lon :?lat) #object[clojure.core$eval17632$fn__17633 0x70e26ffe "clojure.core$eval17632$fn__17633@70e26ffe"])
(16 e 3 ((Wind :?dir :? :? :? :? :? :?) nil nil) "ws:Wind Change Direction")
(17 x 9 ((MapObEvent :? :?crs :? "Wind" :? :? :? "UPD_COURSE") (:?dir :?crs) #object[clojure.core$eval17637$fn__17638 0x3a61f434 "clojure.core$eval17637$fn__17638@3a61f434"]) "ws:Wind Change Direction" 0 (:?dir :?crs :?fids) #object[clojure.core$eval17641$fn__17642 0x61bdf2c1 "clojure.core$eval17641$fn__17642@61bdf2c1"])
(18 ex 3 ((Wind :? :? :? :? :? :?s :?) (:?s) #object[clojure.core$eval17645$fn__17646 0xb0e409f "clojure.core$eval17645$fn__17646@b0e409f"]) "ws:Wind Shift End" 0 (:?fids) #object[clojure.core$eval17649$fn__17650 0x2a19e4c3 "clojure.core$eval17649$fn__17650@2a19e4c3"])
(19 ex 7 ((WindShift :? :? :?) nil nil) "ws:WindShift Shift End" 1 (:?fids) #object[clojure.core$eval17653$fn__17654 0x7b79f578 "clojure.core$eval17653$fn__17654@7b79f578"])
(20 ex 10 ((Mark :? :?lab :?lat :?lon) (:?lab) #object[clojure.core$eval17657$fn__17658 0x4690eb2 "clojure.core$eval17657$fn__17658@4690eb2"]) "ss:Mark on Map" 0 (:?lon :?lab :?lat) #object[clojure.core$eval17661$fn__17662 0x2ff28ed0 "clojure.core$eval17661$fn__17662@2ff28ed0"])
(21 e 0 ((Boat :? :? :?boat :? :? :? :?) nil nil) "ss:Make for Mark Advice")
(22 i 10 ((Mark :? :?mark :? :?) nil nil))
(23 x 11 ((Skipper MAKE-FOR-MARK :?boat :? :? :?mark :?) nil nil) "ss:Make for Mark Advice" 0 (:?fids :?boat :?mark) #object[clojure.core$eval17666$fn__17667 0x41edae40 "clojure.core$eval17666$fn__17667@41edae40"])
(24 e 12 ((Skipper :? :?boat :? :? :? CRS-ON-MARK) nil nil) "ss:Status Beating")
(25 x 13 ((Boat :? :? :?boat :? :? :? HEADWIND) nil nil) "ss:Status Beating" 0 (:?fids) #object[clojure.core$eval17672$fn__17673 0x3eae6932 "clojure.core$eval17672$fn__17673@3eae6932"])
(26 e 12 ((Skipper :? :?boat :? :? :? CRS-ON-MARK) nil nil) "ss:Status Go on Mark")
(27 x 0 ((Boat :? :? :?boat :? :? :? :?wnd) (:?wnd) #object[clojure.core$eval17676$fn__17677 0x47f7d9a7 "clojure.core$eval17676$fn__17677@47f7d9a7"]) "ss:Status Go on Mark" 0 (:?fids) #object[clojure.core$eval17680$fn__17681 0x776e5ed4 "clojure.core$eval17680$fn__17681@776e5ed4"])
(28 e 3 ((Wind :?wnd :? :? :? :? :? :?) nil nil) "ss:Select Beating Tack")
(29 i 13 ((Boat :?crs :? :?boat :? :?taa :? HEADWIND) nil nil))
(30 x 14 ((Skipper :? :? :?e :? :? BEATING) nil nil) "ss:Select Beating Tack" 0 (:?crs :?boat :?wnd :?e :?taa) #object[clojure.core$eval17684$fn__17685 0x3e5af42f "clojure.core$eval17684$fn__17685@3e5af42f"])
(31 e 10 ((Mark :? :?mark :? :?) nil nil) "ss:Beating till Gainful")
(32 i 14 ((Skipper :? :?boat :?e :? :?mark BEATING) nil nil))
(33 i 15 ((Boat :? :? :?boat :? :?taa DONE CLOSEHAULED) nil nil))
(34 x 5 ((Clock :? :?) (:?boat :?mark :?e :?taa) #object[clojure.core$eval17689$fn__17690 0x51fd57fc "clojure.core$eval17689$fn__17690@51fd57fc"]) "ss:Beating till Gainful" 0 (:?fids :?boat) #object[clojure.core$eval17693$fn__17694 0x7a07bcb5 "clojure.core$eval17693$fn__17694@7a07bcb5"])
(35 ex 16 ((Boat :?crs :? :?boat :?tack :?taa GO-ABOUT CLOSEHAULED) nil nil) "ss:Go-about While Beating" 0 (:?tack :?crs :?fids :?boat :?taa) #object[clojure.core$eval17697$fn__17698 0x1f3cbee1 "clojure.core$eval17697$fn__17698@1f3cbee1"])
(36 e 14 ((Skipper :? :?boat :? :? :? BEATING) nil nil) "ss:Bear Away on Beating")
(37 i 0 ((Boat :?crs :? :?boat :?tack :? :? :?) nil nil))
(38 x 17 ((WindShift :?boat :? LIFT) nil nil) "ss:Bear Away on Beating" 0 (:?tack :?sid :?crs :?lab :?fids :?boat) #object[clojure.core$eval17704$fn__17705 0x25f4b0b "clojure.core$eval17704$fn__17705@25f4b0b"])
(39 e 14 ((Skipper :? :?boat :? :? :?mark BEATING) nil nil) "ss:Bear Away till Can on Mark")
(40 i 17 ((WindShift :?boat :? LIFT) nil nil))
(41 i 3 ((Wind :? :? :? :? :? :? :?sid) nil nil))
(42 x 0 ((Boat :? :? :?boat :? :? :? :?) (:?sid :?boat :?mark) #object[clojure.core$eval17709$fn__17710 0x145f9312 "clojure.core$eval17709$fn__17710@145f9312"]) "ss:Bear Away till Can on Mark" -1 (:?fids :?boat) #object[clojure.core$eval17713$fn__17714 0x30e23ffd "clojure.core$eval17713$fn__17714@30e23ffd"])
(43 e 14 ((Skipper :? :?boat :? :? :? BEATING) nil nil) "ss:Luff on Beating")
(44 i 18 ((WindShift :?boat :? HEADER) nil nil))
(45 i 3 ((Wind :? :? :? :? :? :? :?sid) nil nil))
(46 x 0 ((Boat :?crs :? :?boat :?tack :? :? :?) nil nil) "ss:Luff on Beating" 0 (:?tack :?sid :?crs :?fids :?boat) #object[clojure.core$eval17717$fn__17718 0x1bf1ecdf "clojure.core$eval17717$fn__17718@1bf1ecdf"])
