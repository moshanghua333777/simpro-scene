; Sun Sep 09 21:57:40 MSK 2018
; 
;+ (version "3.5")
;+ (build "Build 663")

([SailExpert_Class0] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class90000]
		[igis_Class21]
		[igis_Class22]
		[igis_Class23]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30])
	(Debug "FINE")
	(label "Geiranger Map")
	(Latitude "62.444")
	(layers
		[igis_Class40012]
		[igis_Class1]
		[igis_Class40011])
	(Longitude "6.0")
	(Scale "130000")
	(startUpLayers
		[igis_Class40012]
		[igis_Class1]
		[igis_Class40011]))

([SailExpert_Class1] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [SailExpert_Class0])
	(%3ACREATION-TIMESTAMP "2018.08.17 12:14:13.396 MSK")
	(%3ACREATOR "ru"))

([SailExpert_Class10000] of  CeziumControl

	(but-onboard "Go on Board/pro.server/go-onboard")
	(but-start-serv "Start Cesium Server/pro.server/start-server")
	(but-stop-serv "Stop Cesium Server/pro.server/stop-server")
	(onboard "Bylina"))

([SailExpert_Class100000] of  CloFuncall

	(source "b"))

([SailExpert_Class100001] of  CloFuncall

	(source "(.setCourse b 20)"))

([SailExpert_Class100002] of  CloFuncall

	(source "(.stopRoute b)"))

([SailExpert_Class10003] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-retr-inss "Retract Instances/ru.rules/retr-inss")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(facts
		[SailExpert_Class10023]
		[SailExpert_Class20000]
		[SailExpert_Class150003]
		[SailExpert_Class60000]
		[SailExpert_Class190008])
	(mode run)
	(rule-sets
		[SailExpert_Class10004]
		[SailExpert_Class20011]
		[SailExpert_Class130003]
		[SailExpert_Class130004])
	(steps 1)
	(title "Sail Expert"))

([SailExpert_Class10004] of  RuleSet

	(rules
		[SailExpert_Class20002]
		[SailExpert_Class20009]
		[SailExpert_Class50007]
		[SailExpert_Class170000])
	(templates
		[Boat]
		[MapObEvent]
		[Wind])
	(title "Boat Set"))

([SailExpert_Class10005] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [SailExpert_Class10003])
	(%3ACREATION-TIMESTAMP "2018.08.17 13:14:48.324 MSK")
	(%3ACREATOR "ru"))

([SailExpert_Class10006] of  WorkingPrograms

	(butt-load-progs "Load Programs/protege.core/ldns")
	(cloPrograms
		[RuleEngine_Class30000]
		[SailExpert_Class10009])
	(title "Sail Expert Programs"))

([SailExpert_Class10007] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [SailExpert_Class10006])
	(%3ACREATION-TIMESTAMP "2018.08.17 13:15:39.391 MSK")
	(%3ACREATOR "ru"))

([SailExpert_Class10009] of  CloProgram

	(cloFunctions
		[SailExpert_Class10012]
		[SailExpert_Class10013]
		[SailExpert_Class10014]
		[SailExpert_Class10015]
		[SailExpert_Class10017]
		[SailExpert_Class10018]
		[SailExpert_Class10019]
		[SailExpert_Class40005]
		[SailExpert_Class50004]
		[SailExpert_Class90017]
		[SailExpert_Class140000])
	(cloNamespace [SailExpert_Class10010])
	(cloVars
		[SailExpert_Class10011]
		[SailExpert_Class10016])
	(title "SailExp Funcs"))

([SailExpert_Class10010] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [rete.core :as rete])\n(:import\n  ru.igis.omtab.OMT\n  ru.igis.omtab.MapOb\n  ru.igis.omtab.Clock\n  java.awt.event.ActionListener\n  java.util.TimerTask)")
	(title "sail.exp"))

([SailExpert_Class10011] of  CloVar

	(source "(volatile! {})")
	(title "EVT-LISTENERS"))

([SailExpert_Class10012] of  CloFunction

	(source ";;(println :ASS-MO-EVENT (.getActionCommand evt) (.getName (.getSource evt)))\n(let [tpe (.getActionCommand evt)\n       obj (.getSource evt)]\n  (when (instance? ru.igis.omtab.NavOb obj)\n    (rete/assert-frame ['MapObEvent \n	'type tpe \n	'label (.getName obj)\n	'latitude (.getLatitude obj) \n	'longitude (.getLongitude obj)\n	'altitude (.getAltitude obj)\n	'course (.getCourse obj)\n	'speed (.getSpeed obj)])\n    (rete/fire)))")
	(title "ass-mo-event [evt]"))

([SailExpert_Class10013] of  CloFunction

	(source "(doseq[[pg al] @EVT-LISTENERS]\n  (.removeActionListener pg al))")
	(title "stop-evt-listen []"))

([SailExpert_Class10014] of  CloFunction

	(source "(stop-evt-listen)\n(doseq[pg (OMT/getPlaygrounds)]\n  (let [al (proxy [ActionListener] []\n	(actionPerformed [evt] \n	  ;;(println :OMT-GEN-EVT evt)\n	  (ass-mo-event evt)))]\n    (.addActionListener pg al)\n    (vswap! EVT-LISTENERS assoc pg al)))")
	(title "start-evt-listen []"))

([SailExpert_Class10015] of  CloFunction

	(source "(if (and (some? ES-TIMER) (OMT/isRunning))\n  (let [msec (Clock/getClock)\n         sec (int (/ msec 1000))\n         frm ['Clock 'time sec]]\n    (rete/assert-frame frm)\n    (rete/fire)))")
	(title "work-sim []"))

([SailExpert_Class10016] of  CloVar

	(source "nil")
	(title "ES-TIMER"))

([SailExpert_Class10017] of  CloFunction

	(source "(when (some? ES-TIMER)\n  (.cancel ES-TIMER)\n  (def ES-TIMER nil)\n  (stop-evt-listen)\n  (println \"Simulation Stoped...\"))")
	(title "stop-sim []"))

([SailExpert_Class10018] of  CloFunction

	(source "(if (some? ES-TIMER)\n  (stop-sim))\n(def ES-TIMER (java.util.Timer.))\n(.schedule \n  ES-TIMER \n  (proxy [TimerTask] [] (run [] (work-sim)))\n  (long 0) \n  (long 1000))\n(start-evt-listen)\n(println \"Simulation Started...\")")
	(title "start-sim []"))

([SailExpert_Class10019] of  CloFunction

	(source "(stop-sim)\n(start-sim)")
	(title "restart-sim []"))

([SailExpert_Class10023] of  Clock

	(time 0))

([SailExpert_Class110000] of  NavOb

	(altitude 0)
	(course 160)
	(label "Wind")
	(latitude "62 25")
	(longitude "6 10")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/wind1.png")
	(verticalSpeed 0.0))

([SailExpert_Class120000] of  Rule

	(lhs "?w (Wind direction ?dir)\n?moe (MapObEvent type \"UPD_COURSE\"\n	label \"Wind\"\n	course ?crs\n	(not= ?crs ?dir))")
	(rhs "(let [d (if (< ?crs ?dir) \n            (- ?dir ?crs) \n            (- ?crs ?dir))\n       s (if (< ?crs ?dir)\n            (if (< d 180)\n              'BACKING\n              'VEERING)\n            (if (< d 180)\n              'VEERING\n              'BACKING))]\n  (println \"Wind\" s d \"new direction\" ?crs)\n  (retract ?moe)\n  (modify ?w direction ?crs\n	shift s\n                        shift-degrees d))")
	(salience 0)
	(title "ws:Wind Change Direction"))

([SailExpert_Class120001] of  Rule

	(lhs "(Wind direction ?dir\n	latitude ?lat\n	longitude ?lon\n	(not (ru.igis.omtab.OMT/getMapOb \"Wind\")))")
	(rhs "(when-let [ins (protege.core/fifos \"NavOb\" \"label\" \"Wind\")]\n  (protege.core/ssv ins \"latitude\" ?lat)\n  (protege.core/ssv ins \"longitude\" ?lon)\n  (protege.core/ssv ins \"course\" ?dir)\n  (ru.igis.omtab.OMT/getOrAdd ins)\n  (println \"Wind on map, direction\" ?dir \",coords\" [?lat ?lon]))")
	(salience 0)
	(title "ws:Wind on Map"))

([SailExpert_Class130000] of  Rule

	(lhs "(Skipper status BEATING\n	boat ?boat)\n(Boat label ?boat\n	course ?crs\n	tack ?tack)\n?ws (WindShift boat ?boat\n	shift LIFT)\n(Wind shift-degrees ?sid)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (let [crs (if (= ?tack 'STARBOARD)\n	(+ ?crs ?sid)\n	(- ?crs ?sid))\n         crs (int (sail.exp/trim-bear crs))]\n    (println \"Windward\" ?boat)\n    (retract ?ws)\n    (.setCourse bmo crs)))")
	(salience 0)
	(title "ss:Winward on Beating"))

([SailExpert_Class130001] of  Rule

	(lhs "?b (Boat label ?lab\n	tack ?tack)\n(Wind shift VEERING)\n(not BoatWindShift boat ?lab)")
	(rhs "(let [ws (if (= ?tack 'STARBOARD)\n	'LIFT\n	'HEADER)]\n  (println \"Boat\" ?lab \"wind shift\" ws)\n  (asser BoatWindShift shift ws\n	boat ?lab)\n  (modify ?b sail-point 'UNDEFINED))")
	(salience 1)
	(title "ws:Wind Veering"))

([SailExpert_Class130002] of  Rule

	(lhs "?w (Wind shift ?s (not= ?s 'NIL))")
	(rhs ";;(println \"Wind Shift End\")\n(modify ?w shift 'NIL)")
	(salience 0)
	(title "ws:Wind Shift End"))

([SailExpert_Class130003] of  RuleSet

	(rules
		[SailExpert_Class130001]
		[SailExpert_Class140002]
		[SailExpert_Class120001]
		[SailExpert_Class120000]
		[SailExpert_Class130002]
		[SailExpert_Class150001])
	(templates
		[Wind]
		[MapObEvent]
		[Boat]
		[BoatWindShift])
	(title "Wind Set"))

([SailExpert_Class130004] of  RuleSet

	(rules
		[SailExpert_Class50003]
		[SailExpert_Class60001]
		[SailExpert_Class60002]
		[SailExpert_Class180000]
		[SailExpert_Class180001]
		[SailExpert_Class190009]
		[SailExpert_Class230009])
	(templates
		[Mark]
		[Boat]
		[Wind]
		[Skipper]
		[Route]
		[Depth])
	(title "Skipper Set"))

([SailExpert_Class140000] of  CloFunction

	(source "(if-let [bmo (ru.igis.omtab.OMT/getMapOb boat)]\n  (if-let [mmo (ru.igis.omtab.OMT/getMapOb mark)]\n    (.abaft bmo mmo)))")
	(title "abaft [boat mark]"))

([SailExpert_Class140002] of  Rule

	(lhs "?b (Boat label ?lab\n	tack ?tack)\n(Wind shift BACKING)\n(not BoatWindShift boat ?lab)")
	(rhs "(let [ws (if (= ?tack 'STARBOARD)\n	'HEADER\n	'LIFT)]\n  (println \"Boat\" ?lab \"wind shift\" ws)\n  (asser BoatWindShift shift ws\n	boat ?lab)\n  (modify ?b sail-point 'UNDEFINED))")
	(salience 1)
	(title "ws:Wind Backing"))

([SailExpert_Class150000] of  Document

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n          	<b>&#1051;&#1077;&#1075;&#1077;&#1085;&#1076;&#1072;</b><br>      <br>      1. &#1042;&#1077;&#1090;&#1077;&#1088; &#1080; &#1064;&#1082;&#1080;&#1087;&#1077;&#1088; &#1103;&#1074;&#1083;&#1103;&#1102;&#1090;&#1089;&#1103; &#1089;&#1074;&#1086;&#1073;&#1086;&#1076;&#1085;&#1099;&#1084;&#1080; &#1080; &#1076;&#1077;&#1081;&#1089;&#1090;&#1074;&#1091;&#1102;&#1097;&#1080;&#1084;&#1080; &#1085;&#1077;&#1079;&#1072;&#1074;&#1080;&#1089;&#1080;&#1084;&#1086;   &#1089;&#1091;&#1097;&#1085;&#1086;&#1089;&#1090;&#1103;&#1084;&#1080;. &#1042;&#1077;&#1090;&#1077;&#1088; &#1087;&#1088;&#1086;&#1080;&#1079;&#1074;&#1086;&#1083;&#1100;&#1085;&#1086; &#1084;&#1077;&#1085;&#1103;&#1077;&#1090; &#1089;&#1074;&#1086;&#1077; &#1085;&#1072;&#1087;&#1088;&#1072;&#1074;&#1083;&#1077;&#1085;&#1080;&#1077; &#1080; &#1089;&#1080;&#1083;&#1091;. &#1064;&#1082;&#1080;&#1087;&#1077;&#1088;   &#1087;&#1088;&#1086;&#1080;&#1079;&#1074;&#1086;&#1083;&#1100;&#1085;&#1086; &#1084;&#1077;&#1085;&#1103;&#1077;&#1090; &#1082;&#1091;&#1088;&#1089; &#1083;&#1086;&#1076;&#1082;&#1080;. &#1056;&#1077;&#1079;&#1091;&#1083;&#1100;&#1090;&#1072;&#1090;&#1086;&#1084; &#1080;&#1093; &#1089;&#1086;&#1074;&#1084;&#1077;&#1089;&#1090;&#1085;&#1086;&#1081; &#1085;&#1077;&#1079;&#1072;&#1074;&#1080;&#1089;&#1080;&#1084;&#1086;&#1081;   &#1076;&#1077;&#1103;&#1090;&#1077;&#1083;&#1100;&#1085;&#1086;&#1089;&#1090;&#1080; &#1089;&#1090;&#1072;&#1085;&#1086;&#1074;&#1080;&#1090;&#1089;&#1103; &#1074;&#1099;&#1084;&#1087;&#1077;&#1083;&#1100;&#1085;&#1099;&#1081; &#1074;&#1077;&#1090;&#1077;&#1088; (&#1074;&#1083;&#1080;&#1103;&#1085;&#1080;&#1077; &#1089;&#1086;&#1073;&#1089;&#1090;&#1074;&#1077;&#1085;&#1085;&#1086;&#1075;&#1086; &#1076;&#1074;&#1080;&#1078;&#1077;&#1085;&#1080;&#1103;   &#1083;&#1086;&#1076;&#1082;&#1080; &#1087;&#1086;&#1082;&#1072; &#1085;&#1077; &#1091;&#1095;&#1080;&#1090;&#1099;&#1074;&#1072;&#1077;&#1084;).<br>      <br>      2. &#1051;&#1086;&#1076;&#1082;&#1072; &#1094;&#1077;&#1083;&#1080;&#1082;&#1086;&#1084; &#1079;&#1072;&#1074;&#1080;&#1089;&#1080;&#1084;&#1086;&#1077; &#1086;&#1090; &#1076;&#1077;&#1081;&#1089;&#1090;&#1074;&#1080;&#1081; &#1074;&#1077;&#1090;&#1088;&#1072; &#1080; &#1096;&#1082;&#1080;&#1087;&#1077;&#1088;&#1072; &#1089;&#1091;&#1097;&#1085;&#1086;&#1089;&#1090;&#1100;, &#1085;&#1086;   &#1089;&#1085;&#1072;&#1073;&#1078;&#1077;&#1085;&#1085;&#1072;&#1103; &#1080;&#1076;&#1077;&#1072;&#1083;&#1100;&#1085;&#1086;&#1081; &#1082;&#1086;&#1084;&#1072;&#1085;&#1076;&#1086;&#1081;, &#1074; &#1090;&#1086;&#1084; &#1089;&#1084;&#1099;&#1089;&#1083;&#1077;, &#1095;&#1090;&#1086; &#1101;&#1090;&#1072; &#1082;&#1086;&#1084;&#1072;&#1085;&#1076;&#1072;   &#1091;&#1089;&#1090;&#1072;&#1085;&#1072;&#1074;&#1083;&#1080;&#1074;&#1072;&#1077;&#1090; &#1084;&#1075;&#1085;&#1086;&#1074;&#1077;&#1085;&#1085;&#1086; &#1074; &#1079;&#1072;&#1074;&#1080;&#1089;&#1080;&#1084;&#1086;&#1089;&#1090;&#1080; &#1086;&#1090; &#1090;&#1077;&#1082;&#1091;&#1097;&#1077;&#1075;&#1086; &#1074;&#1099;&#1084;&#1087;&#1077;&#1083;&#1100;&#1085;&#1086;&#1075;&#1086; &#1074;&#1077;&#1090;&#1088;&#1072;   &#1087;&#1072;&#1088;&#1091;&#1089;&#1072; &#1086;&#1087;&#1090;&#1080;&#1084;&#1072;&#1083;&#1100;&#1085;&#1099;&#1084; &#1086;&#1073;&#1088;&#1072;&#1079;&#1086;&#1084; &#1076;&#1083;&#1103; &#1087;&#1086;&#1083;&#1091;&#1095;&#1077;&#1085;&#1080;&#1103; &#1084;&#1072;&#1082;&#1089;&#1080;&#1084;&#1072;&#1083;&#1100;&#1085;&#1086;&#1081; &#1089;&#1082;&#1086;&#1088;&#1086;&#1089;&#1090;&#1080; &#1085;&#1072;   &#1090;&#1077;&#1082;&#1091;&#1097;&#1077;&#1084; &#1082;&#1091;&#1088;&#1089;&#1072;, &#1091;&#1089;&#1090;&#1072;&#1085;&#1086;&#1074;&#1083;&#1077;&#1085;&#1085;&#1086;&#1084; &#1096;&#1082;&#1080;&#1087;&#1077;&#1088;&#1086;&#1084;.</body>\n</html>"))

([SailExpert_Class150001] of  Rule

	(lhs "?bws (BoatWindShift)")
	(rhs ";;(println \"Boat Wind Shift End\")\n(retract ?bws)")
	(salience -1)
	(title "ws:Boat Wind Shift End"))

([SailExpert_Class150003] of  Wind

	(direction 160)
	(forse 2)
	(latitude "62 25")
	(longitude "6 10")
	(shift NIL)
	(shift-degrees 0))

([SailExpert_Class160000] of  Rule

	(lhs "(Skipper status BEATING\n	boat ?boat)\n?ws (WindShift boat ?boat\n	shift HEADER)\n(Wind shift-degrees ?sid)\n?b (Boat label ?boat\n	course ?crs\n	tack ?tack)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (if (> ?sid 12)\n    (modify ?b turn 'GO-ABOUT)\n    (let [crs (if (= ?tack 'STARBOARD)\n	(- ?crs ?sid)\n	(+ ?crs ?sid))\n           crs (int (sail.exp/trim-bear crs))]\n      (println :OCRS ?crs :SID ?sid :NCRS crs)\n      (retract ?ws)\n      (.setCourse bmo crs))))")
	(salience 0)
	(title "ss:Bear off or Go About on Beating"))

([SailExpert_Class160001] of  CloFuncall

	(source "(ru.rules/f 18)"))

([SailExpert_Class160004] of  Rule

	(lhs "?s (Skipper status BEATING\n	boat ?boat\n	mark ?mark)\n?ws (WindShift boat ?boat\n	shift LIFT)\n(Wind shift-degrees ?sid)\n(Boat label ?boat (< (sail.exp/course-away-from-mark ?boat ?mark) ?sid))")
	(rhs "(println \"Skipper\" ?boat \"status\" 'GO-ON-MARK)\n(retract ?ws)\n(modify ?s status 'GO-ON-MARK)")
	(salience 1)
	(title "ss:Winward till Can on Mark"))

([SailExpert_Class170000] of  Rule

	(lhs "(Boat label ?lab	sail-point ?slp\n	speed ?spd)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?lab)]\n  (let [osp (.getSpeed bmo)\n         nsp (condp = ?slp\n	'RUNNING 	 ?spd\n	'BROADREACH	 (* ?spd 0.8)\n	'BEAMREACH	 (* ?spd 0.7)\n	'CLOSEREACH	 (* ?spd 0.6)\n	'CLOSEHAULED	 (* ?spd 0.5)\n	0.0)\n         nsp (double (Math/round nsp))]\n    (if (not= nsp osp)\n      (if (= nsp 0.0)\n        (.stopRoute bmo)\n        (.setSpeed bmo nsp)))))")
	(salience 0)
	(title "bs:Boat Speed"))

([SailExpert_Class170001] of  CloFuncall

	(source "(type 0.0)"))

([SailExpert_Class180000] of  Rule

	(lhs "(Mark label ?mark)\n(Skipper status CAN-ON-MARK\n	mark ?mark\n	boat ?boat)\n(Boat label ?boat)\n(Wind direction ?wnd)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (if-let [mmo (ru.igis.omtab.OMT/getMapOb ?mark)]\n    (let [bea (.bearingsDeg bmo mmo)]\n      (.setCourse bmo (int bea)))))")
	(salience 0)
	(title "ss:Select on Mark Course"))

([SailExpert_Class180001] of  Rule

	(lhs "(Route title ?tit	marks ?mm)\n(Mark label ?mark)\n?s (Skipper mark ?mark\n	route ?tit\n	lap ?lap\n	boat ?boat\n	status ?sts\n	(not= ?sts 'UNDEFINED))\n(Boat label ?boat)\n(Clock (sail.exp/abaft ?boat ?mark))")
	(rhs "(println \"Boat\" ?boat \"abaft the mark\" ?mark)\n(if (>= ?lap (count ?mm))\n  (do (println \"Boat\" ?boat \"finished route\" ?tit)\n    (modify ?s status 'UNDEFINED\n	mark \"NIL\"\n	route (str ?tit \" - finished!\")\n	lap 0))    \n  (let [mkn (nth ?mm ?lap)\n         mkl (protege.core/sv mkn \"label\")]\n    (ru.rules/assert-instances [mkn])\n    (modify ?s status 'UNDEFINED\n	mark mkl\n	lap (inc ?lap))\n    (println \"Boat\" ?boat \"go on next mark\" mkl)))")
	(salience 0)
	(title "ss:Mark Abaft"))

([SailExpert_Class190000] of  NavOb

	(altitude 0)
	(course 0)
	(label "m1")
	(latitude "62 24.28")
	(longitude "6 2.81")
	(playground-index 0)
	(speed 0.0)
	(verticalSpeed 0.0))

([SailExpert_Class190005] of  Mark

	(altitude 0)
	(course 0)
	(label "m2")
	(latitude "62 22.74")
	(longitude "6 6.12")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class190006] of  Mark

	(altitude 0)
	(course 0)
	(label "m3")
	(latitude "62 22")
	(longitude "6 10")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class190007] of  Mark

	(altitude 0)
	(course 0)
	(label "m4")
	(latitude "62 22.9")
	(longitude "6 15")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class190008] of  Route

	(marks
		[SailExpert_Class50002]
		[SailExpert_Class190005]
		[SailExpert_Class190006]
		[SailExpert_Class190007]
		[SailExpert_Class210000]
		[SailExpert_Class210001]
		[SailExpert_Class210002]
		[SailExpert_Class210003]
		[SailExpert_Class210004]
		[SailExpert_Class210005])
	(title "Along Geiranger Fjord"))

([SailExpert_Class190009] of  Rule

	(lhs "(Route title ?tit	marks ?mm)\n?s (Skipper boat ?boat\n	route ?tit\n	lap 0\n	mark \"NIL\")")
	(rhs "(when-let [mk1 (first ?mm)]\n  (ru.rules/assert-instances [mk1])\n  (modify ?s mark (protege.core/sv mk1 \"label\")\n	lap 1)\n  (println \"Boat\" ?boat \"started route\" ?tit))")
	(salience 0)
	(title "ss:Start Route"))

([SailExpert_Class2] of  NavOb

	(altitude 0)
	(course 0)
	(label "b1")
	(latitude "62 24.28")
	(longitude "6 2.81")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class20000] of  Boat

	(course 0)
	(depth-interval 60)
	(label "Bylina")
	(sail-point UNDEFINED)
	(speed 12.0)
	(tack UNDEFINED)
	(tack-angle 38))

([SailExpert_Class200000] of  CloFuncall

	(source "(ru.igis.omtab/getMapOb \"Bylina\")"))

([SailExpert_Class200001] of  CloFuncall

	(source "(.getRoute (ru.igis.omtab.OMT/getMapOb \"Bylina\"))"))

([SailExpert_Class200002] of  CloFuncall

	(source "(def r (.getRoute (ru.igis.omtab.OMT/getMapOb \"Bylina\")))"))

([SailExpert_Class200003] of  CloFuncall

	(source "(.getNextRoutePoint (ru.igis.omtab.OMT/getMapOb \"Bylina\"))"))

([SailExpert_Class200004] of  CloFuncall

	(source "(.getNextPointIndex (ru.igis.omtab.OMT/getMapOb \"Bylina\"))"))

([SailExpert_Class200005] of  CloFuncall

	(source "(count r)"))

([SailExpert_Class20001] of  Rule

	(lhs "(Clock time ?t (< ?t 1))")
	(rhs "(sail.exp/start-sim)")
	(salience 0)
	(title "sim:Start Simulation"))

([SailExpert_Class20002] of  Rule

	(lhs "(Boat label ?lab course ?crs\n	(not (ru.igis.omtab.OMT/getMapOb ?lab)))")
	(rhs "(when-let [ins (protege.core/fifos \"NavOb\" \"label\" ?lab)]\n  (protege.core/ssv ins \"course\" ?crs)\n  (ru.igis.omtab.OMT/getOrAdd ins)\n  (asser Depth boat ?lab\n	depth-time 0)\n  (println \"Boat on map:\" ?lab \", course\" ?crs))")
	(salience 0)
	(title "bs:Boat on Map"))

([SailExpert_Class20003] of  CloProgram

	(cloFunctions [RuleEngine_Class220000])
	(cloNamespace [Clojure_Class300001])
	(title "SE Clojure Work"))

([SailExpert_Class20004] of  CloFuncall

	(source "(ru.rules/sp :all)"))

([SailExpert_Class20005] of  CloFuncall

	(source "(ru.rules/f 1)"))

([SailExpert_Class20006] of  CloFuncall

	(source "sail.exp/EVT-LISTENERS"))

([SailExpert_Class20007] of  CloFuncall

	(source "(ru.rules/f 15)"))

([SailExpert_Class20008] of  Rule

	(lhs "?me (MapObEvent)")
	(rhs "(retract ?me)")
	(salience -10)
	(title "sim:RetractMapObEvent"))

([SailExpert_Class20009] of  Rule

	(lhs "?b (Boat label ?lab course ?ocrs)\n?moe (MapObEvent type \"UPD_COURSE\"\n	label ?lab\n	course ?ncrs\n	(not= ?ncrs ?ocrs))")
	(rhs "(println \"Boat\" ?lab \"new course\" ?ncrs)\n(retract ?moe)\n(modify ?b course ?ncrs\n	sail-point 'UNDEFINED\n	tack 'UNDEFINED)")
	(salience 0)
	(title "bs:Boat Change Course"))

([SailExpert_Class20010] of  Rule

	(lhs "?c1 (Clock time ?t1)\n?c2 (Clock time ?t2\n	(< ?t2 ?t1))")
	(rhs "(retract ?c2)")
	(salience 10)
	(title "sim:RetractSecondClock"))

([SailExpert_Class20011] of  RuleSet

	(rules
		[SailExpert_Class20008]
		[SailExpert_Class20010]
		[SailExpert_Class20001])
	(templates
		[Clock]
		[MapObEvent])
	(title "Simulation Set"))

([SailExpert_Class210000] of  Mark

	(altitude 0)
	(course 0)
	(label "m5")
	(latitude "62 23.64")
	(longitude "6 21.84")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210001] of  Mark

	(altitude 0)
	(course 0)
	(label "m6")
	(latitude "62 24.82")
	(longitude "6 26.34")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210002] of  Mark

	(altitude 0)
	(course 0)
	(label "m7")
	(latitude "62 25")
	(longitude "6 31.27")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210003] of  Mark

	(altitude 0)
	(course 0)
	(label "m8")
	(latitude "62 25.95")
	(longitude "6 34.28")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210004] of  Mark

	(altitude 0)
	(course 0)
	(label "m9")
	(latitude "62 27.69")
	(longitude "6 41.52")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210005] of  Mark

	(altitude 0)
	(course 0)
	(label "m10")
	(latitude "62 27.84")
	(longitude "6 44.35")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy1.png")
	(verticalSpeed 0.0))

([SailExpert_Class210006] of  CloFuncall

	(source "(sail.exp/show-route \"Bylina\")"))

([SailExpert_Class210008] of  CloFuncall

	(source "(.isKeepRoute (ru.igis.omtab.OMT/getMapOb \"Bylina\"))"))

([SailExpert_Class210009] of  CloFuncall

	(source "(.setKeepRoute (ru.igis.omtab.OMT/getMapOb \"Bylina\") false)"))

([SailExpert_Class210010] of  CloFuncall

	(source "(.setKeepRoute (ru.igis.omtab.OMT/getMapOb \"Bylina\") )"))

([SailExpert_Class220000] of  OMTPoly

	(label "Bylina-route")
	(latitude "62 26.62")
	(longitude "6 0")
	(playground-index 0)
	(points
		"62 26.62 6 0"
		"62 26.62 6 0"
		"62 25.58 6 3.89"
		"62 24.18 6 2.78"
		"62 23.19 6 6.47"
		"62 22.69 6 6.08"
		"62 22.05 6 9.87"
		"62 21.97 6 10.16"
		"62 22.91 6 14.97"
		"62 22.86 6 15.17"
		"62 23.7 6 21.99"
		"62 24.91 6 26.52"
		"62 25.02 6 31.22"
		"62 24.97 6 31.42"
		"62 26.04 6 34.49"
		"62 27.75 6 41.76"
		"62 27.85 6 44.31"
		"62 27.09 6 36.26"
		"62 26.94 6 34.56"
		"62 26.87 6 32.83")
	(relative FALSE))

([SailExpert_Class230000] of  CloProgram

	(cloFunctions [SailExpert_Class230002])
	(cloNamespace [SailExpert_Class230001])
	(cloVars
		[SailExpert_Class230004]
		[SailExpert_Class230003])
	(title "geonames"))

([SailExpert_Class230001] of  CloNamespace

	(source "(:use \n  protege.core\n  clojure.xml)\n(:import java.net.URL)\n(:gen-class :load-impl-ns false)")
	(title "geo.names"))

([SailExpert_Class230002] of  CloFunction

	(source ";; Get elevation (step 30m) from Geonames Web Service\n;; Arguments can be vectors (length <= 20 on free server)\n(let [url (if (vector? lat)\n	(let [lats (apply str (interpose \",\" lat))\n	       lngs (apply str (interpose \",\" lng))]\n	   (str *elev30-url* \"?lats=\" lats \"&lngs=\" lngs))\n	(str *elev30-url* \"?lat=\" lat \"&lng=\" lng))\n       url (str url \"&type=XML&username=\" *username*)]\n (try\n  (if-let [xml (clojure.xml/parse url)]\n    (if (vector? lat)\n        (map #(first (:content %)) (filter #(some #{:astergdem} (vals %)) (:content xml)))\n        (first (:content (first (:content xml)) )) ))\n  (catch Exception e\n   (ctpl e)\n   ())))")
	(title "call-geonames-elev30 [lat lng]"))

([SailExpert_Class230003] of  CloVar

	(source "\"http://api.geonames.org/astergdemXML\"")
	(title "^:dynamic *elev30-url*"))

([SailExpert_Class230004] of  CloVar

	(source "\"liikalanjoki\"")
	(title "^:dynamic *username*"))

([SailExpert_Class230005] of  CloFuncall

	(source "(geo.names/call-geonames-elev30 62.426 6.069)"))

([SailExpert_Class230006] of  CloFuncall

	(source "(geo.names/call-geonames-elev30 62.426 6.068)"))

([SailExpert_Class230007] of  CloFuncall

	(source "(geo.names/call-geonames-elev30 62.426 6.067)"))

([SailExpert_Class230008] of  CloFuncall

	(source "(geo.names/call-geonames-elev30 62.426 6.066)"))

([SailExpert_Class230009] of  Rule

	(lhs "(Boat label ?boat\n	depth-interval ?di)\n?d (Depth boat ?boat\n	depth-time ?dt)\n(Clock time ?t (> ?t ?dt))")
	(rhs "(println :DDA)\n(modify ?d depth-time (+ ?t ?di))")
	(salience 0)
	(title "ss:Dangerous Depth Ahead"))

([SailExpert_Class230010] of  CloFuncall

	(source "(rem 12345 60)"))

([SailExpert_Class230011] of  CloFuncall

	(source "(rem 12300 60)"))

([SailExpert_Class230012] of  CloFuncall

	(source "(rem 12340 60)"))

([SailExpert_Class230013] of  CloFuncall

	(source "(rem 12359 60)"))

([SailExpert_Class230014] of  CloFuncall

	(source "(rem 12360 60)"))

([SailExpert_Class230015] of  CloFuncall

	(source "(rem 12361 60)"))

([SailExpert_Class230016] of  CloFuncall

	(source "(rem 12362 60)"))

([SailExpert_Class230017] of  CloFuncall

	(source "(rem 12400 60)"))

([SailExpert_Class230018] of  CloFuncall

	(source "(rem 12419 60)"))

([SailExpert_Class230019] of  CloFuncall

	(source "(rem 12420 60)"))

([SailExpert_Class30000] of  CloFuncall

	(source "(ru.rules/f 0)"))

([SailExpert_Class40000] of  CloFuncall

	(source "(ru.rules/pp 'Clock)"))

([SailExpert_Class40001] of  CloFuncall

	(source "(ru.rules/pp 'Boat)"))

([SailExpert_Class40005] of  CloFunction

	(source "(cond\n  (< b 0) (+ b 360)\n  (> b 360) (- b 360)\n  true b)")
	(title "trim-bear [b]"))

([SailExpert_Class40011] of  NavOb

	(altitude 0)
	(course 0)
	(label "Bylina")
	(latitude "62 26.62")
	(longitude "6 0")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/yachtp.png")
	(verticalSpeed 0.0))

([SailExpert_Class40012] of  NavOb

	(altitude 0)
	(course 0)
	(label "b2")
	(latitude "62 26.63")
	(longitude "6 2")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy2.png")
	(verticalSpeed 0.0))

([SailExpert_Class40013] of  NavOb

	(altitude 0)
	(course 0)
	(label "b3")
	(latitude "62 26.63")
	(longitude "6 3")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy3.png")
	(verticalSpeed 0.0))

([SailExpert_Class40014] of  NavOb

	(altitude 0)
	(course 0)
	(label "b4")
	(latitude "62 26.63")
	(longitude "6 4")
	(playground-index 0)
	(speed 0.0)
	(url "file:data/images/buoy4.png")
	(verticalSpeed 0.0))

([SailExpert_Class50000] of  CloFuncall

	(source "(ru.rules/pp :all)"))

([SailExpert_Class50002] of  Mark

	(label "m1")
	(latitude "62 24.28")
	(longitude "6 2.81")
	(url "file:data/images/buoy1.png"))

([SailExpert_Class50003] of  Rule

	(lhs "(Mark label ?lab latitude ?lat\n	 longitude ?lon\n	 url ?url\n	 (not (ru.igis.omtab.OMT/getMapOb ?lab)))")
	(rhs "(when-let [ins (protege.core/fifos \"NavOb\" \"label\" ?lab)]\n  (ru.igis.omtab.OMT/getOrAdd ins)\n  (println \"Mark on map:\" ?lab \", coords\" [?lat ?lon]))")
	(salience 0)
	(title "ss:Mark on Map"))

([SailExpert_Class50004] of  CloFunction

	(title "inside [windir headwind]"))

([SailExpert_Class50005] of  CloFuncall

	(source "(ru.rules/f 2)"))

([SailExpert_Class50007] of  Rule

	(lhs "?b (Boat sail-point UNDEFINED\n	label ?boat\n	course ?crs\n	tack-angle ?taa)\n(Wind direction ?wnd)")
	(rhs "(let [dif (if (> ?crs ?wnd) (- ?crs ?wnd) (- ?wnd ?crs))\n       dif (if (> dif 180) (- 360 dif) dif)\n       slp (cond	(> dif 168.75) 'RUNNING\n	(> dif 101.25) 'BROADREACH\n	(> dif 78.74) 'BEAMREACH\n                        (> dif 56.25) 'CLOSEREACH\n	(> dif ?taa) 'CLOSEHAULED\n	true 'INIRONS)\n       tck (if (> ?wnd ?crs)\n	(if (< (- ?wnd ?crs) 180)\n	  'STARBOARD\n	  'PORT)\n	(if (< (- ?crs ?wnd) 180)\n	  'PORT\n	  'STARBOARD))]\n  (modify ?b sail-point slp tack tck)\n  (println \"Boat\" ?boat \"on\" tck \"tack and\" slp))")
	(salience 0)
	(title "bs:Boat Sail Point"))

([SailExpert_Class60000] of  Skipper

	(boat "Bylina")
	(epsilon 2)
	(lap 0)
	(mark "NIL")
	(route "Along Geiranger Fjord")
	(status UNDEFINED))

([SailExpert_Class60001] of  Rule

	(lhs "(Mark label ?mark)\n(Wind direction ?wnd)\n?s (Skipper mark ?mark\n	boat ?boat\n	status ?sts\n	epsilon ?e)\n(Boat label ?boat\n	tack-angle ?taa)\n(Clock)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (if-let [mmo (ru.igis.omtab.OMT/getMapOb ?mark)]\n    (let [bea (.bearingsDeg bmo mmo)\n           dif (if (> bea ?wnd) (- bea ?wnd) (- ?wnd bea))\n           dif (if (> dif 180) (- 360 dif) dif)\n           sts (if (> dif (+ ?taa ?e)) \n	'CAN-ON-MARK\n	'BEATING)]\n      (when (not= sts ?sts)\n        (.setCourse bmo (int bea))\n        (println \"Skipper\" ?boat \"status\" sts)\n        (modify ?s status sts)))))")
	(salience 0)
	(title "ss:Skipper Status"))

([SailExpert_Class60002] of  Rule

	(lhs "(Mark label ?mark)\n(Skipper status BEATING\n	mark ?mark\n	boat ?boat\n	epsilon ?e)\n(Boat label ?boat\n	tack-angle ?taa)\n(Wind direction ?wnd)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (if-let [mmo (ru.igis.omtab.OMT/getMapOb ?mark)]\n    (let [bea (.bearingsDeg bmo mmo)\n           crs (if (> ?wnd bea)\n	(- ?wnd ?taa ?e)\n	(+ ?wnd ?taa ?e))\n           crs (sail.exp/trim-bear crs)]\n      (.setCourse bmo (int crs)))))")
	(salience 0)
	(title "ss:Select Beating Course"))

([SailExpert_Class70000] of  Rule

	(lhs "?s (Skipper status BEATING\n	mark ?mark\n	boat ?boat\n	epsilon ?e)\n?b (Boat wind CLOSEHAULED\n	turn DONE\n	label ?boat\n	tack-angle ?taa)\n(Clock (> (sail.exp/course-away-from-mark ?boat ?mark) (* 2 (+ ?taa ?e))))")
	(rhs "(println \"Boat\" ?boat \"turn\" 'GO-ABOUT)\n(modify ?b turn 'GO-ABOUT)")
	(salience 0)
	(title "ss:Beating till Gainful"))

([SailExpert_Class80000] of  Rule

	(lhs "?b (Boat turn GO-ABOUT\n	wind CLOSEHAULED\n	label ?boat\n	course ?crs\n	tack-angle ?taa\n	tack ?tack)")
	(rhs "(if-let [bmo (ru.igis.omtab.OMT/getMapOb ?boat)]\n  (let [e 2\n         trn (* 2 (+ ?taa e))\n         crs (condp = ?tack \n                 'STARBOARD (+ ?crs trn)\n                 'PORT (- ?crs trn))\n         crs (sail.exp/trim-bear crs)]\n    (modify ?b turn 'DOING)\n    (.setCourse bmo crs)))")
	(salience 0)
	(title "ss:Go-about While Beating"))

([SailExpert_Class90000] of  CloFuncall

	(source "(ru.igis.omtab.OMT/getMapOb \"Bylina\")"))

([SailExpert_Class90001] of  CloFuncall

	(source "(def b (ru.igis.omtab.OMT/getMapOb \"Bylina\"))"))

([SailExpert_Class90017] of  CloFunction

	(source "(if-let [mo (OMT/getMapOb lab)]\n  (let [rte (.getRoute mo)\n         deg (map #(map (fn[x] (Math/toDegrees x)) %) rte)\n         pnt (map #(str (MapOb/getDegMin (first %)) \" \" (MapOb/getDegMin (second %))) deg)\n         pli (foc \"OMTPoly\" \"label\" (str lab \"-route\"))]\n    (if-let [omo (OMT/getMapOb pli)]\n      (OMT/removeMapOb omo false))\n    (when (> (count deg) 0)\n      (ssv pli \"latitude\" (MapOb/getDegMin (ffirst deg)))\n      (ssv pli \"longitude\" (MapOb/getDegMin (second (first deg)))))\n    (ssvs pli \"points\" pnt)\n    (OMT/getOrAdd pli)))")
	(title "show-route [lab]"))
