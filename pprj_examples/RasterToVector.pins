; Mon Aug 13 21:38:04 MSK 2018
; 
;+ (version "3.5")
;+ (build "Build 663")

([RasterToVector_Class0] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class21]
		[igis_Class22]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30]
		[igis_Class23])
	(Debug "FINE")
	(label "RTV Map")
	(Latitude "65.0")
	(layers
		[igis_Class40012]
		[RasterToVector_Class10001]
		[igis_Class1]
		[igis_Class40011])
	(Longitude "17.5")
	(Scale "15000000")
	(startUpLayers
		[igis_Class40012]
		[RasterToVector_Class10001]))

([RasterToVector_Class1] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class0])
	(%3ACREATION-TIMESTAMP "2018.07.08 21:57:08.207 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class10000] of  CloFuncall

	(source "(menu.item/clojure-work)"))

([RasterToVector_Class100000] of  CloFuncall

	(source "(rtv.core/slope1 60 -4)"))

([RasterToVector_Class10001] of  ETOPOLayer

	(class "com.bbn.openmap.layer.etopo.ETOPOEleLayer")
	(contrast "64")
	(label "ETOPO5Ele")
	(minute.spacing "5")
	(number.colors "128")
	(opaque "200")
	(path "data/ETOPO")
	(prettyName "ETOPO5 Elevations Access")
	(view.type "0"))

([RasterToVector_Class10002] of  CloProgram

	(cloFunctions
		[RasterToVector_Class10008]
		[RasterToVector_Class10009])
	(cloNamespace [RasterToVector_Class10003])
	(cloVars
		[RasterToVector_Class10004]
		[RasterToVector_Class10005]
		[RasterToVector_Class10006]
		[RasterToVector_Class10007])
	(title "ETOPOEleLayer"))

([RasterToVector_Class10003] of  CloNamespace

	(source "(:gen-class\n  :name com.bbn.openmap.layer.etopo.ETOPOEleLayer\n  :extends com.bbn.openmap.layer.etopo.ETOPOLayer\n  :exposes {dataBuffer {:get getDataBuffer}\n                  bufferWidth {:get getBufferWidth}\n                  bufferHeight {:get getBufferHeight}}\n  :post-init pinit)")
	(title "subcla.etoele"))

([RasterToVector_Class10004] of  CloVar

	(source "nil")
	(title "THIS"))

([RasterToVector_Class10005] of  CloVar

	(source "nil")
	(title "SCX"))

([RasterToVector_Class10006] of  CloVar

	(source "nil")
	(title "SCY"))

([RasterToVector_Class10007] of  CloVar

	(source "nil")
	(title "BUFWID"))

([RasterToVector_Class10008] of  CloFunction

	(source "(def THIS this)\n(println :THIS this)")
	(title "-pinit [this]"))

([RasterToVector_Class10009] of  CloFunction

	(source "(let [bwd (or BUFWID (do (def BUFWID (.getBufferWidth THIS)) BUFWID))\n       scy (or SCY (do (def SCY (float (/ (.getBufferHeight THIS) 180.0))) SCY))\n       scx (or SCX (do (def SCX (float (/ bwd 360.0))) SCX))\n       lat_idx (int (* (- 90.0 lat) scy))\n       lon_idx (int (* lon scx))\n       ofs (+ lon_idx (* lat_idx bwd))]\n  (aget (.getDataBuffer THIS) ofs))")
	(title "elevation [[lat lon]]"))

([RasterToVector_Class101206] of  CloFuncall

	(source "(ru.igis.omtab.OMT/getPlaygrounds)"))

([RasterToVector_Class101207] of  CloFuncall

	(source "(first (ru.igis.omtab.OMT/getPlaygrounds))"))

([RasterToVector_Class101208] of  CloFuncall

	(source "(.getRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)))"))

([RasterToVector_Class101209] of  CloFuncall

	(source "(.setRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)) (RuMapMouseAdapter.))"))

([RasterToVector_Class101210] of  CloFuncall

	(source "(.setRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)) (ru.igis.omtab.gui.RuMapMouseAdapter.))"))

([RasterToVector_Class101211] of  CloFuncall

	(source "(rtv.core/pointsField 30 130 80 80)"))

([RasterToVector_Class107612] of  CloFuncall

	(source "(rtv.core/pointsField 0 90 80 80)"))

([RasterToVector_Class120000] of  CloFuncall

	(source "(doseq [i (protege.core/cls-instances \"OMTPoly\")] (protege.core/delin))"))

([RasterToVector_Class121601] of  CloFunction

	(source "(let [pele (+ ele MAXD)\n       rele (/ pele (+ MAXD MAXH))\n       dele (* rele disc)]\n  (int dele))")
	(title "level1 [ele disc]"))

([RasterToVector_Class121604] of  CloFuncall

	(source "(rtv.core/level 5000 20)"))

([RasterToVector_Class121605] of  CloFuncall

	(source "(rtv.core/level 8000 20)"))

([RasterToVector_Class121606] of  CloFuncall

	(source "(rtv.core/level 8800 20)"))

([RasterToVector_Class121607] of  CloFuncall

	(source "(rtv.core/level 0 20)"))

([RasterToVector_Class126070] of  CloVar

	(source "{0	\"FD0000FF\"\n1	\"E60000FF\"\n2	\"CF0000FF\"\n3	\"B80000FF\"\n4	\"A10000FF\"\n5	\"8A0000FF\"\n6	\"730000FF\"\n7	\"5C0000FF\"\n8	\"450000FF\"\n9	\"2E0000FF\"\n10	\"170000FF\"\n11	\"FF00AA00\"\n12	\"38FF0000\"\n13	\"54FF0000\"\n14	\"70FF0000\"\n15	\"8CFF0000\"\n16	\"A8FF0000\"\n17	\"C4FF0000\"\n18	\"E0FF0000\"\n19	\"FCFF0000\"}")
	(title "LEVCOL20"))

([RasterToVector_Class20000] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xe y ?yp latlon ?llp\n	(= ?yp (inc ?ye)))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	y ?yp\n	latlon ?llp)")
	(salience -3)
	(title "ib:GoNorth"))

([RasterToVector_Class20001] of  CloFunction

	(source "(rete.core/assert-frame\n	['Point\n	 'lat lat\n	 'lon lon\n	 'id (gensym \"p\")\n	 'north nil\n	 'south nil\n	 'west nil\n	 'east nil])")
	(title "assert-point [lat lon]"))

([RasterToVector_Class20002] of  CloVar

	(source "(let [pg0 (first (ru.igis.omtab.OMT/getPlaygrounds))]\n  (if (not (.getRuMapMouseAdapter pg0))\n    (.setRuMapMouseAdapter pg0 (ru.igis.omtab.gui.RuMapMouseAdapter.))))")
	(title "RMMA0"))

([RasterToVector_Class30000] of  CloFunction

	(source "([lab lat lon color]\n  (if-let [mo (OMT/getMapOb lab)]\n    (OMT/removeMapOb mo true))\n  (let [ins (foc \"OMTPoint\" \"label\" lab)]\n    (ssv ins \"description\" lab)\n    (ssv ins \"latitude\" (MapOb/getDegMin lat))\n    (ssv ins \"longitude\" (MapOb/getDegMin lon))\n    (ssv ins \"lineColor\" color)\n    (ssv ins \"oval\" true)\n    (OMT/getOrAdd ins)))\n([lab lat lon]\n  (point lab lat lon \"FFFF0000\"))")
	(title "point"))

([RasterToVector_Class30001] of  Rule

	(lhs "p (Point x ?x y ?y latlon ?ll)")
	(rhs "(retract p)\n(asser Segment points []\n	x ?x\n	y ?y\n	latlon ?ll)")
	(salience -5)
	(title "id:Segment"))

([RasterToVector_Class30002] of  CloFuncall

	(source "(ru.rules/pp 'Segment)"))

([RasterToVector_Class30003] of  CloFuncall

	(source "(rtv.core/elevationField 58 3 40 40 0)"))

([RasterToVector_Class30011] of  CloFunction

	(source "([id lat lon level disc color]\n  (let [ele (elevation [lat lon])\n         lev (level1 ele disc)]\n    (if (= lev level)\n      (let [mo (point (str id) lat lon color)]\n        (.setDescription mo (str \"<html>id: \" id \n	\"<br>lat: \" lat \n	\"<br>lon: \" lon\n	\"<br>ele: \" ele\n	\"<br>lev: \" lev))\n        (.hideLabel mo)\n        (assert-point lat lon mo)))))\n([id lat lon]\n  (let [disc 20\n         ele (elevation [lat lon])\n         lev (level1 ele disc)\n         mo  (point (str id) lat lon (LEVCOL20 lev))]\n    (.setDescription mo (str \"<html>id: \" id \n	\"<br>lat: \" lat \n	\"<br>lon: \" lon\n	\"<br>ele: \" ele\n	\"<br>lev: \" lev))\n    (.hideLabel mo)))")
	(title "levelPoint"))

([RasterToVector_Class30012] of  CloFunction

	(source "([lat lon w h]\n  (doseq [y (range h)]\n    (doseq [x (range w)] \n     (levelPoint (str x \":\" y)\n	(+ lat (* y STEPD)) \n	(+ lon (* x STEPD))))))\n([lat lon w h level disc color]\n  (doseq [y (range h)]\n    (doseq [x (range w)] \n      (levelPoint (str x \":\" y)\n	(+ lat (* y STEPD)) \n	(+ lon (* x STEPD))\n	level\n	disc\n	color))))")
	(title "levelField"))

([RasterToVector_Class40000] of  Rule

	(lhs "(Point x ?x y ?y latlon ?ll)")
	(rhs "(println :PNT ?x ?y ?ll)\n(.hideLabel (rtv.core/point (str ?x \":\" ?y) (first ?ll) (second ?ll)))")
	(salience -2)
	(title "ib:Display Point"))

([RasterToVector_Class40175] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xe y ?yp latlon ?llp\n	(= ?yp (dec ?ye)))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	y ?yp\n	latlon ?llp)")
	(salience -3)
	(title "ib:GoSouth"))

([RasterToVector_Class40177] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?ye latlon ?llp\n	(= ?xp (inc ?xe)))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	latlon ?llp)")
	(salience -3)
	(title "ib:GoEast"))

([RasterToVector_Class40178] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?ye latlon ?llp\n	(= ?xp (dec ?xe)))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	latlon ?llp)")
	(salience -3)
	(title "ib:GoWest"))

([RasterToVector_Class40322] of  CloFunction

	(source "([lab points color]\n  (if-let [mo (OMT/getMapOb lab)]\n    (OMT/removeMapOb mo true))\n  (let [ins (foc \"OMTPoly\" \"label\" lab)\n         [lat lon] (first points)]\n    (ssv ins \"description\" lab)\n    (ssv ins \"latitude\" (MapOb/getDegMin lat))\n    (ssv ins \"longitude\" (MapOb/getDegMin lon))\n    (ssv ins \"lineColor\" color)\n    (ssvs ins \"points\" (vec (map #(str (MapOb/getDegMin (first %)) \" \" \n		        (MapOb/getDegMin (second %))) points)))\n    (OMT/getOrAdd ins)))\n([lab points]\n  (segment lab points \"FF0000FF\"))")
	(title "segment"))

([RasterToVector_Class40323] of  Rule

	(lhs "(Segment latlon \"CLOSED\"\n	points ?pts)")
	(rhs "(println :SGT (first ?pts))\n(rtv.core/segment (str (first ?pts)) ?pts)")
	(salience -2)
	(title "ib:Display Segment"))

([RasterToVector_Class40920] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?yp latlon ?llp\n	((= ?xp (inc ?xe))\n	 (= ?yp (inc ?ye))))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	y ?yp\n	latlon ?llp)")
	(salience -4)
	(title "ib:GoNorthEast"))

([RasterToVector_Class40921] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?yp latlon ?llp\n	((= ?xp (dec ?xe))\n	 (= ?yp (inc ?ye))))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	y ?yp\n	latlon ?llp)")
	(salience -4)
	(title "ib:GoNorthWest"))

([RasterToVector_Class40922] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?yp latlon ?llp\n	((= ?xp (inc ?xe))\n	 (= ?yp (dec ?ye))))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	y ?yp\n	latlon ?llp)")
	(salience -4)
	(title "ib:GoSouthEast"))

([RasterToVector_Class40923] of  Rule

	(lhs "s (Segment points ?pp\n	x ?xe\n	y ?ye\n	latlon ?lle)\np (Point x ?xp y ?yp latlon ?llp\n	((= ?xp (dec ?xe))\n	 (= ?yp (dec ?ye))))")
	(rhs "(retract p)\n(modify s points (vec (conj ?pp ?lle))\n	x ?xp\n	y ?yp\n	latlon ?llp)")
	(salience -4)
	(title "ib:GoSouthWest"))

([RasterToVector_Class40934] of  CloFuncall

	(source "(rtv.core/elevationField 58 3 80 80 0)"))

([RasterToVector_Class40960] of  CloFuncall

	(source "(ru.rules/pp 'Point)"))

([RasterToVector_Class41217] of  CloVar

	(source "11000")
	(title "MAXD"))

([RasterToVector_Class41218] of  CloVar

	(source "9000")
	(title "MAXH"))

([RasterToVector_Class50118] of  Rule

	(lhs "p (Point x ?x y ?y side nil)\n   (Point x ?x1 y ?y (= ?x1 (inc ?x)))\n   (Point x ?x2 y ?y (= ?x2 (dec ?x)))\n   (Point x ?x y ?y1 (= ?y1 (inc ?y)))\n   (Point x ?x y ?y2 (= ?y2 (dec ?y)))")
	(rhs ";;(println :IP ?x ?y)\n(modify p side \"INSIDE\")")
	(salience 0)
	(title "ib:Inner Point"))

([RasterToVector_Class51388] of  Rule

	(lhs "p (Point side \"BORDER\")")
	(rhs "(retract p)")
	(salience -1)
	(title "id:Retract Border Point"))

([RasterToVector_Class51390] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 1 rtv.core/STEPD) (first ?pp1) (first ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat (reverse ?pp1) ?pp2)))")
	(salience 0)
	(title "ib:Connect two Segments HH1"))

([RasterToVector_Class51396] of  CloFunction

	(source "(let [dx (if (> x1 x2) (- x1 x2) (- x2 x1))\n       dy (if (> y1 y2) (- y1 y2) (- y2 y1))]\n  (and (<= dx e) (<= dy e)))")
	(title "near [e [y1 x1] [y2 x2]]"))

([RasterToVector_Class51397] of  Rule

	(lhs "s (Segment x ?x y ?y latlon ?ll\n	points ?pts\n	((not (empty? ?pts))\n	 (vector? ?ll)))")
	(rhs "(modify s points (vec (conj ?pts ?ll))\n	latlon \"CLOSED\")")
	(salience -6)
	(title "ib:Close Segment"))

([RasterToVector_Class51805] of  CloFunction

	(source "(doseq [y (range h)]\n  (doseq [x (range w)]\n    (let [lat (+ lat (* y STEPD))\n           lon (+ lon (* x STEPD))]\n      (if (>= (elevation [lat lon]) ele)\n        (rete.core/assert-frame\n	['Point\n	 'x x\n	 'y y\n	 'latlon [lat lon]\n	 'side (if (or (= x 0)\n	                   (= y 0)\n	                   (= x (dec w))	\n	                   (= y (dec h)))\n	            \"BORDER\")])) ) ))")
	(title "elevationField [lat lon w h ele]"))

([RasterToVector_Class60127] of  CloFuncall

	(source "(eval 'rtv.core/STEPD)"))

([RasterToVector_Class60253] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 1 rtv.core/STEPD) (last ?pp1) (last ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat ?pp1 (reverse ?pp2))))")
	(salience 0)
	(title "ib:Connect two Segments TT1"))

([RasterToVector_Class60485] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 1 rtv.core/STEPD) (last ?pp1) (first ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat ?pp1 ?pp2)))")
	(salience 0)
	(title "ib:Connect two Segments HT1"))

([RasterToVector_Class60486] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 2 rtv.core/STEPD) (first ?pp1) (first ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat (reverse ?pp1) ?pp2)))")
	(salience -1)
	(title "ib:Connect two Segments HH2"))

([RasterToVector_Class60487] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 2 rtv.core/STEPD) (last ?pp1) (first ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat ?pp1 ?pp2)))")
	(salience -1)
	(title "ib:Connect two Segments HT2"))

([RasterToVector_Class60488] of  Rule

	(lhs "s1 (Segment latlon \"CLOSED\" \n	points ?pp1)\ns2 (Segment latlon \"CLOSED\"\n	points ?pp2\n	(rtv.core/near (* 2 rtv.core/STEPD) (last ?pp1) (last ?pp2)))")
	(rhs "(println :CON (first ?pp1) (first ?pp2))\n(retract s2)\n(modify s1 points (vec (concat ?pp1 (reverse ?pp2))))")
	(salience -1)
	(title "ib:Connect two Segments TT2"))

([RasterToVector_Class60847] of  CloFuncall

	(source "(rtv.core/elevationField 2 2 80 80 0)"))

([RasterToVector_Class64804] of  RuleSet

	(rules
		[RasterToVector_Class50118]
		[RasterToVector_Class98210]
		[RasterToVector_Class51388]
		[RasterToVector_Class40000]
		[RasterToVector_Class20000]
		[RasterToVector_Class40175]
		[RasterToVector_Class40177]
		[RasterToVector_Class40178]
		[RasterToVector_Class40921]
		[RasterToVector_Class40922]
		[RasterToVector_Class40923]
		[RasterToVector_Class40920]
		[RasterToVector_Class30001]
		[RasterToVector_Class51397]
		[RasterToVector_Class51390]
		[RasterToVector_Class60253]
		[RasterToVector_Class60485]
		[RasterToVector_Class60486]
		[RasterToVector_Class60488]
		[RasterToVector_Class60487]
		[RasterToVector_Class40323])
	(templates
		[Point]
		[Segment])
	(title "Isobath"))

([RasterToVector_Class70000] of  WorkingPrograms

	(butt-load-progs "Load Programs/protege.core/ldns")
	(cloPrograms
		[RuleEngine_Class30000]
		[RasterToVector_Class70006])
	(title "RtV Programs"))

([RasterToVector_Class70001] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class70000])
	(%3ACREATION-TIMESTAMP "2018.07.16 14:26:49.557 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class70002] of  CloProgram

	(cloFunctions [RuleEngine_Class220000])
	(cloNamespace [Clojure_Class300001])
	(title "Clojure Work"))

([RasterToVector_Class70003] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets [RasterToVector_Class64804])
	(steps 1)
	(title "RtV Run"))

([RasterToVector_Class70004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class70003])
	(%3ACREATION-TIMESTAMP "2018.07.16 15:32:32.291 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class70006] of  CloProgram

	(cloFunctions
		[RasterToVector_Class70124]
		[RasterToVector_Class121601]
		[RasterToVector_Class30000]
		[RasterToVector_Class20001]
		[RasterToVector_Class30011]
		[RasterToVector_Class30012]
		[RasterToVector_Class51805]
		[RasterToVector_Class40322]
		[RasterToVector_Class51396])
	(cloNamespace [RasterToVector_Class70007])
	(cloVars
		[RasterToVector_Class80004]
		[RasterToVector_Class41218]
		[RasterToVector_Class41217]
		[RasterToVector_Class126070]
		[RasterToVector_Class20002])
	(title "RtV Program"))

([RasterToVector_Class70007] of  CloNamespace

	(source "(:use protege.core\n  subcla.etoele\n  ru.rules)\n(:import\n  ru.igis.omtab.OMTPoly\n  ru.igis.omtab.MapOb\n  ru.igis.omtab.OMT)")
	(title "rtv.core"))

([RasterToVector_Class70124] of  CloFunction

	(source "([mo r g b]\n  (fill-color mo r g b 255))\n([mo r g b a]\n  (let [mo (if (string? mo) \n	(ru.igis.omtab.OMT/getMapOb mo)\n	mo)]\n    (.setFillPaint (.getLocationMarker mo) (java.awt.Color. r g b a))))")
	(title "fill-color"))

([RasterToVector_Class80004] of  CloVar

	(source "(double (* (/ 5 60) 3))")
	(title "STEPD"))

([RasterToVector_Class98210] of  Rule

	(lhs "p (Point side \"INSIDE\")")
	(rhs "(retract p)")
	(salience -1)
	(title "id:Retract Inner Point"))
