; Wed Aug 01 23:34:16 MSK 2018
; 
;+ (version "3.5")
;+ (build "Build 663")

([RasterToVector_Class0] of  Openmap

	(components
		[igis_Class2]
		[igis_Class3]
		[igis_Class4]
		[igis_Class12]
		[igis_Class40000]
		[igis_Class40001]
		[igis_Class70000]
		[igis_Class14]
		[igis_Class15]
		[igis_Class16]
		[igis_Class17]
		[igis_Class18]
		[igis_Class19]
		[igis_Class20]
		[igis_Class21]
		[igis_Class22]
		[Scenario_Class60001]
		[igis_Class25]
		[igis_Class26]
		[igis_Class27]
		[igis_Class28]
		[igis_Class29]
		[igis_Class30])
	(Debug "FINE")
	(label "RTV Map")
	(Latitude "60.0")
	(layers
		[igis_Class40012]
		[RasterToVector_Class10001]
		[igis_Class1]
		[igis_Class40011])
	(Longitude "-4")
	(Scale "7600000")
	(startUpLayers
		[igis_Class40012]
		[RasterToVector_Class10001]
		[igis_Class40011]))

([RasterToVector_Class1] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class0])
	(%3ACREATION-TIMESTAMP "2018.07.08 21:57:08.207 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class10000] of  ShareOnto

	(but-deep-copy "Deep Copy Instance/share.onto/deep-copy")
	(but-del-fil "Delete Filtered Instances/share.onto/delfil")
	(but-del-unref "Delete Unreferenced/share.onto/delete-unref")
	(but-find-unref "Find Unreferenced/share.onto/find-unref")
	(but-load-prj "Load Source Project/share.onto/load-src-prj")
	(but-shal-copy "Shallow Copy Instances/share.onto/shal-copy")
	(source-project "DefaultKnowledgeBase(Tsunami)"))

([RasterToVector_Class100000] of  CloFuncall

	(source "(rtv.core/slope1 60 -4)"))

([RasterToVector_Class100003] of  CloFunction

	(source "(let [itr (int (* (/ 255 gmax) grad))\n       itr (if (> itr 255) 255 itr)\n       xtr (format \"%02x\" itr)] \n  (str xtr (.substring color 2)))")
	(title "grad-to-transpar [grad gmax color]"))

([RasterToVector_Class10001] of  ETOPOLayer

	(class "com.bbn.openmap.layer.etopo.ETOPOEleLayer")
	(contrast "64")
	(label "ETOPO5Ele")
	(minute.spacing "5")
	(number.colors "128")
	(opaque "200")
	(path "data/ETOPO")
	(prettyName "ETOPO5 Elevations Access")
	(view.type "0"))

([RasterToVector_Class10002] of  CloProgram

	(cloFunctions
		[RasterToVector_Class10008]
		[RasterToVector_Class10009])
	(cloNamespace [RasterToVector_Class10003])
	(cloVars
		[RasterToVector_Class10004]
		[RasterToVector_Class10005]
		[RasterToVector_Class10006]
		[RasterToVector_Class10007])
	(title "ETOPOEleLayer"))

([RasterToVector_Class10003] of  CloNamespace

	(source "(:gen-class\n  :name com.bbn.openmap.layer.etopo.ETOPOEleLayer\n  :extends com.bbn.openmap.layer.etopo.ETOPOLayer\n  :exposes {dataBuffer {:get getDataBuffer}\n                  bufferWidth {:get getBufferWidth}\n                  bufferHeight {:get getBufferHeight}}\n  :post-init pinit)")
	(title "subcla.etoele"))

([RasterToVector_Class10004] of  CloVar

	(source "nil")
	(title "THIS"))

([RasterToVector_Class10005] of  CloVar

	(source "nil")
	(title "SCX"))

([RasterToVector_Class10006] of  CloVar

	(source "nil")
	(title "SCY"))

([RasterToVector_Class10007] of  CloVar

	(source "nil")
	(title "BUFWID"))

([RasterToVector_Class10008] of  CloFunction

	(source "(def THIS this)\n(println :THIS this)")
	(title "-pinit [this]"))

([RasterToVector_Class10009] of  CloFunction

	(source "(let [bwd (or BUFWID (do (def BUFWID (.getBufferWidth THIS)) BUFWID))\n       scy (or SCY (do (def SCY (float (/ (.getBufferHeight THIS) 180.0))) SCY))\n       scx (or SCX (do (def SCX (float (/ bwd 360.0))) SCX))\n       lat_idx (int (* (- 90.0 lat) scy))\n       lon_idx (int (* lon scx))\n       ofs (+ lon_idx (* lat_idx bwd))]\n  (aget (.getDataBuffer THIS) ofs))")
	(title "elevation [[lat lon]]"))

([RasterToVector_Class101206] of  CloFuncall

	(source "(ru.igis.omtab.OMT/getPlaygrounds)"))

([RasterToVector_Class101207] of  CloFuncall

	(source "(first (ru.igis.omtab.OMT/getPlaygrounds))"))

([RasterToVector_Class101208] of  CloFuncall

	(source "(.getRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)))"))

([RasterToVector_Class101209] of  CloFuncall

	(source "(.setRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)) (RuMapMouseAdapter.))"))

([RasterToVector_Class101210] of  CloFuncall

	(source "(.setRuMapMouseAdapter (first (ru.igis.omtab.OMT/getPlaygrounds)) (ru.igis.omtab.gui.RuMapMouseAdapter.))"))

([RasterToVector_Class101211] of  CloFuncall

	(source "(rtv.core/pointsField 30 130 80 80)"))

([RasterToVector_Class107612] of  CloFuncall

	(source "(rtv.core/pointsField 0 90 80 80)"))

([RasterToVector_Class110009] of  CloFunction

	(source "(let [slo (slope1 lat lon)\n       pnt #(str (MapOb/getDegMin (first %)) \" \" (MapOb/getDegMin (second %)))\n       lin [(pnt (first slo)) (pnt (second slo))]\n       _ (println lin)\n       gpo (OMTPoly/createOMTPoly\n	(str id)\n	(MapOb/getDegMin lat)\n	(MapOb/getDegMin lon)\n	color\n	color\n	\"false\"\n	\"false\"\n	lin)\n       mo (OMT/addMapOb gpo (second (OMT/getPlaygrounds)))]\n  (.hideLabel mo))")
	(title "slope1Line [id lat lon color]"))

([RasterToVector_Class120000] of  CloFuncall

	(source "(doseq [i (protege.core/cls-instances \"OMTPoly\")] (protege.core/delin))"))

([RasterToVector_Class121600] of  CloFunction

	(source "(let [disc 20\n       ele (elevation [lat lon])\n       lev (level1 ele disc)\n       ;;_ (println :lev lev)\n       color (LEVCOL20 lev)\n       pol (OMTPoly/createOMTPoly\n	(str id)\n	(MapOb/getDegMin lat)\n	(MapOb/getDegMin lon)\n	color\n	color\n	\"true\"\n	\"false\"\n	[(str (MapOb/getDegMin lat) \" \" (MapOb/getDegMin lon))\n	 (str (MapOb/getDegMin lat) \" \" (MapOb/getDegMin (+ lon (* 3 D5MIN))))\n	 (str (MapOb/getDegMin (- lat (* 3 D5MIN))) \" \" (MapOb/getDegMin (+ lon (* 3 D5MIN))))\n	 (str (MapOb/getDegMin (- lat (* 3 D5MIN))) \" \" (MapOb/getDegMin lon))])\n           mo (OMT/addMapOb pol (second (OMT/getPlaygrounds)))]\n      (.hideLabel mo))")
	(title "isoPoly [id lat lon]"))

([RasterToVector_Class121601] of  CloFunction

	(source "(let [pele (+ ele MAXD)\n       rele (/ pele (+ MAXD MAXH))\n       dele (* rele disc)]\n  (int dele))")
	(title "level1 [ele disc]"))

([RasterToVector_Class121602] of  CloVar

	(source "11000")
	(title "MAXD"))

([RasterToVector_Class121603] of  CloVar

	(source "9000")
	(title "MAXH"))

([RasterToVector_Class121604] of  CloFuncall

	(source "(rtv.core/level 5000 20)"))

([RasterToVector_Class121605] of  CloFuncall

	(source "(rtv.core/level 8000 20)"))

([RasterToVector_Class121606] of  CloFuncall

	(source "(rtv.core/level 8800 20)"))

([RasterToVector_Class121607] of  CloFuncall

	(source "(rtv.core/level 0 20)"))

([RasterToVector_Class121608] of  CloFuncall

	(source "(rtv.core/level -11000 20)"))

([RasterToVector_Class121609] of  CloFuncall

	(source "(rtv.core/level -12000 20)"))

([RasterToVector_Class121610] of  CloFuncall

	(source "(rtv.core/level -11022 20)"))

([RasterToVector_Class121611] of  CloFuncall

	(source "(rtv.core/level 1000 20)"))

([RasterToVector_Class121612] of  CloFuncall

	(source "(rtv.core/level 900 20)"))

([RasterToVector_Class121613] of  CloFuncall

	(source "(rtv.core/level 990 20)"))

([RasterToVector_Class121614] of  CloFuncall

	(source "(rtv.core/level 998 20)"))

([RasterToVector_Class121615] of  CloFuncall

	(source "(rtv.core/level 999 20)"))

([RasterToVector_Class121616] of  CloFuncall

	(source "(rtv.core/level 2000 20)"))

([RasterToVector_Class121617] of  CloFuncall

	(source "(rtv.core/level 3000 20)"))

([RasterToVector_Class121618] of  CloFuncall

	(source "(rtv.core/level 3500 20)"))

([RasterToVector_Class121619] of  CloFuncall

	(source "(rtv.core/level -3500 20)"))

([RasterToVector_Class121620] of  CloFunction

	(source "(doseq [y (range h)]\n  (doseq [x (range w)] \n   (isoPoly (str x y)\n	(+ lat (* y 3 D5MIN)) \n	(+ lon (* x 3 D5MIN)))))")
	(title "fieldIso [lat lon w h]"))

([RasterToVector_Class121621] of  CloFuncall

	(source "(rtv.core/fieldIso 57.7 5 40 40 11 20 \"50ffffff\")"))

([RasterToVector_Class122408] of  CloFuncall

	(source "(rtv.core/fieldIso 57.7 5 40 40 11 20 \"50ffff00\")"))

([RasterToVector_Class123195] of  CloFuncall

	(source "(rtv.core/fieldIso 57.7 -5 120 40 5 20 \"50ff00ff\")"))

([RasterToVector_Class123196] of  CloFuncall

	(source "(rtv.core/fieldIso 57.7 -5 120 40 8 20 \"50ff00ff\")"))

([RasterToVector_Class123402] of  CloFuncall

	(source "(rtv.core/fieldIso 57.7 -5 120 40 10 20 \"500000ff\")"))

([RasterToVector_Class126070] of  CloVar

	(source "{0	\"FD0000FF\"\n1	\"E60000FF\"\n2	\"CF0000FF\"\n3	\"B80000FF\"\n4	\"A10000FF\"\n5	\"8A0000FF\"\n6	\"730000FF\"\n7	\"5C0000FF\"\n8	\"450000FF\"\n9	\"2E0000FF\"\n10	\"170000FF\"\n11	\"1CFF0000\"\n12	\"38FF0000\"\n13	\"54FF0000\"\n14	\"70FF0000\"\n15	\"8CFF0000\"\n16	\"A8FF0000\"\n17	\"C4FF0000\"\n18	\"E0FF0000\"\n19	\"FCFF0000\"}")
	(title "LEVCOL20"))

([RasterToVector_Class20000] of  CloFunction

	(source "(doseq [y (range h)]\n  (doseq [x (range w)] \n   (slope1Line (str x y)\n	(+ lat (* y 3 D5MIN)) \n	(+ lon (* x 3 D5MIN))\n                        \"FFFF0000\")))")
	(title "fieldSlope [lat lon w h]"))

([RasterToVector_Class30000] of  CloFunction

	(source "([lab lat lon color]\n  (if-let [mo (OMT/getMapOb lab)]\n    (OMT/removeMapOb mo true))\n  (let [ins (crin \"OMTPoint\")]\n    (ssv ins \"label\" lab) \n    (ssv ins \"latitude\" (MapOb/getDegMin lat))\n    (ssv ins \"longitude\" (MapOb/getDegMin lon))\n    (ssv ins \"lineColor\" color)\n    (ssv ins \"oval\" true)\n    (OMT/getOrAdd ins)))\n([lab lat lon]\n  (point lab lat lon \"FFFF0000\"))")
	(title "point"))

([RasterToVector_Class30011] of  CloFunction

	(source "([id lat lon level disc color]\n  (let [ele (elevation [lat lon])\n         lev (level1 ele disc)]\n    (if (= lev level)\n      (let [mo (point (str id) lat lon color)]\n        (.setDescription mo (str \"<html>id: \" id \n	\"<br>lat: \" lat \n	\"<br>lon: \" lon\n	\"<br>ele: \" ele\n	\"<br>lev: \" lev))\n        (.hideLabel mo)))))\n([id lat lon]\n  (let [disc 20\n         ele (elevation [lat lon])\n         lev (level1 ele disc)\n         mo  (point (str id) lat lon (LEVCOL20 lev))]\n    (.setDescription mo (str \"<html>id: \" id \n	\"<br>lat: \" lat \n	\"<br>lon: \" lon\n	\"<br>ele: \" ele\n	\"<br>lev: \" lev))\n    (.hideLabel mo)))")
	(title "levelPoint"))

([RasterToVector_Class30012] of  CloFunction

	(source "([lat lon w h]\n  (doseq [y (range h)]\n    (doseq [x (range w)] \n     (levelPoint (str x \":\" y)\n	(+ lat (* y 3 D5MIN)) \n	(+ lon (* x 3 D5MIN))))))\n([lat lon w h level disc color]\n  (doseq [y (range h)]\n    (doseq [x (range w)] \n      (levelPoint (str x \":\" y)\n	(+ lat (* y 3 D5MIN)) \n	(+ lon (* x 3 D5MIN))\n	level\n	disc\n	color))))")
	(title "pointsField"))

([RasterToVector_Class40000] of  CloFunction

	(source "(let [gra (gradient lat lon)\n       ;;_ (println gra)\n       gtp (grad-to-transpar gra gmax color)\n       gpo (OMTPoly/createOMTPoly\n	(str id)\n	(MapOb/getDegMin lat)\n	(MapOb/getDegMin lon)\n	gtp\n	gtp\n	\"true\"\n	\"false\"\n	[(str (MapOb/getDegMin lat) \" \" (MapOb/getDegMin lon))\n	 (str (MapOb/getDegMin lat) \" \" (MapOb/getDegMin (+ lon (* 3 D5MIN))))\n	 (str (MapOb/getDegMin (- lat (* 3 D5MIN))) \" \" (MapOb/getDegMin (+ lon (* 3 D5MIN))))\n	 (str (MapOb/getDegMin (- lat (* 3 D5MIN))) \" \" (MapOb/getDegMin lon))])\n       mo (OMT/addMapOb gpo (second (OMT/getPlaygrounds)))]\n  (.hideLabel mo))")
	(title "gradientPoly [id lat lon gmax color]"))

([RasterToVector_Class50000] of  CloFuncall

	(source "(rtv.core/pointsField 62 4 20 20)"))

([RasterToVector_Class50401] of  CloFuncall

	(source "(rtv.core/pointsField 30 80 40 40)"))

([RasterToVector_Class52002] of  CloFuncall

	(source "(rtv.core/pointsField 25 80 80 80)"))

([RasterToVector_Class58403] of  CloFuncall

	(source "(rtv.core/pointsField 20 130 80 80)"))

([RasterToVector_Class64804] of  RuleSet

	(templates [Point])
	(title "Isobath"))

([RasterToVector_Class64805] of  CloFuncall

	(source "(rtv.core/pointsField 40 140 80 80)"))

([RasterToVector_Class70000] of  WorkingPrograms

	(butt-load-progs "Load Programs/protege.core/ldns")
	(cloPrograms
		[RasterToVector_Class10002]
		[RasterToVector_Class70006])
	(title "RtV Programs"))

([RasterToVector_Class70001] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class70000])
	(%3ACREATION-TIMESTAMP "2018.07.16 14:26:49.557 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class70002] of  CloProgram

	(cloFunctions [RuleEngine_Class220000])
	(cloNamespace [Clojure_Class300001])
	(title "Clojure Work"))

([RasterToVector_Class70003] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets [RasterToVector_Class64804])
	(steps 1)
	(title "RtV Run"))

([RasterToVector_Class70004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [RasterToVector_Class70003])
	(%3ACREATION-TIMESTAMP "2018.07.16 15:32:32.291 MSK")
	(%3ACREATOR "ru"))

([RasterToVector_Class70006] of  CloProgram

	(cloFunctions
		[RasterToVector_Class80000]
		[RasterToVector_Class100003]
		[RasterToVector_Class40000]
		[RasterToVector_Class80015]
		[RasterToVector_Class90400]
		[RasterToVector_Class110009]
		[RasterToVector_Class20000]
		[RasterToVector_Class121601]
		[RasterToVector_Class121600]
		[RasterToVector_Class121620]
		[RasterToVector_Class30000]
		[RasterToVector_Class30011]
		[RasterToVector_Class30012])
	(cloNamespace [RasterToVector_Class70007])
	(cloVars
		[RasterToVector_Class80004]
		[RasterToVector_Class121602]
		[RasterToVector_Class121603]
		[RasterToVector_Class126070])
	(title "RtV Program"))

([RasterToVector_Class70007] of  CloNamespace

	(source "(:use protege.core\n  subcla.etoele)\n(:import\n  ru.igis.omtab.OMTPoly\n  ru.igis.omtab.MapOb\n  ru.igis.omtab.OMT)")
	(title "rtv.core"))

([RasterToVector_Class80000] of  CloFunction

	(source "(let [ec    (elevation [lat lon])\n       en    (elevation [(+ lat D5MIN) lon])\n       ene  (elevation [(+ lat D5MIN) (+ lon D5MIN)])\n       enw (elevation [(+ lat D5MIN) (- lon D5MIN)])\n       es    (elevation [(- lat D5MIN) lon])\n       ese  (elevation [(- lat D5MIN) (+ lon D5MIN)])\n       esw (elevation [(- lat D5MIN) (- lon D5MIN)])\n       ee    (elevation [lat (+ lon D5MIN)])\n       ew   (elevation [lat (- lon D5MIN)])\n       mim (min ec en ene enw es ese esw ee ew)\n       maz (max ec en ene enw es ese esw ee ew)]\n  ;;(println ec en ene enw es ese esw ee ew)\n  (- maz mim))")
	(title "gradient [lat lon]"))

([RasterToVector_Class80004] of  CloVar

	(source "(double (/ 1 12))")
	(title "D5MIN"))

([RasterToVector_Class80015] of  CloFunction

	(source "(doseq [y (range h)]\n  (doseq [x (range w)] \n   (gradientPoly (str x y)\n	(+ lat (* y 3 D5MIN)) \n	(+ lon (* x 3 D5MIN))\n	500\n                        \"FFFF0000\")))")
	(title "field [lat lon w h]"))

([RasterToVector_Class90400] of  CloFunction

	(source "(let [cde (fn [p] [p (elevation p)])\n       c    (cde [lat lon])\n       n    (cde [(+ lat D5MIN) lon])\n       ne  (cde [(+ lat D5MIN) (+ lon D5MIN)])\n       nw (cde [(+ lat D5MIN) (- lon D5MIN)])\n       s    (cde [(- lat D5MIN) lon])\n       se  (cde [(- lat D5MIN) (+ lon D5MIN)])\n       sw (cde [(- lat D5MIN) (- lon D5MIN)])\n       e    (cde [lat (+ lon D5MIN)])\n       w   (cde [lat (- lon D5MIN)])\n       dif (fn [x] (let [x (map second x)]\n	(- (apply max x) (apply min x))))\n       m (hash-map \n	(dif [w c e])    [(first w) (first e)]\n	(dif [s c n])     [(first s) (first n)]\n	(dif [sw c ne]) [(first sw) (first ne)]\n	(dif [nw c se]) [(first nw) (first se)])]\n  (m (apply min (keys m))))")
	(title "slope1 [lat lon]"))
